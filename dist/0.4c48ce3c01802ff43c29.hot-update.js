webpackHotUpdate(0,{

/***/ 130:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.input = exports.InputBox = undefined;\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _index = __webpack_require__(43);\n\nvar _python = __webpack_require__(61);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// dom reference element for main user input box\nvar input = void 0;\n\n// helper to check whether history id (tracker in list) is not null (why does this exist??)\nvar notNull = function notNull(inputHistory) {\n    return inputHistory.currId !== null;\n};\n// get currently selected history element\nvar getCurrentHistory = function getCurrentHistory(inputHistory) {\n    return _.reverse(inputHistory.history.slice())[inputHistory.currId];\n};\n\n// key binder to grab special keystrokes in main input field\nvar _onKeyDown = function _onKeyDown(dispatch, inputHistory, e, predictions) {\n    var keyCode = e.keyCode || e.which;\n    // so this is great, but tab completion has nothing to do with history...\n    if (keyCode === 9) {\n        // tab\n        if (predictions.length > 0) {\n            var stripText = predictions[0].text.replace(/{/g, '').replace(/}/g, '');\n            input.value = stripText;\n            (0, _python.updateHint)(input.value);\n        }\n        e.preventDefault();\n    }\n    if (keyCode === 38) {\n        // up arrow\n        dispatch((0, _index.moveInputHistory)({ 'direction': 'up' }));\n        if (notNull(inputHistory)) {\n            input.value = getCurrentHistory(inputHistory);\n        }\n    } else if (keyCode === 40) {\n        // down arrow\n        dispatch((0, _index.moveInputHistory)({ 'direction': 'down' }));\n        if (notNull(inputHistory)) {\n            input.value = getCurrentHistory(inputHistory);\n        }\n    }\n};\n\n// store input value, and update hint and docs\nvar onChangeInput = function onChangeInput(dispatch) {\n    dispatch((0, _index.storeCurrentInput)(input.value));\n    (0, _python.updateHint)(input.value);\n    (0, _python.updateDocs)(input.value);\n};\n\n// this component defines main text input\nvar InputBox = function InputBox(_ref) {\n    var dispatch = _ref.dispatch,\n        inputHistory = _ref.inputHistory,\n        predictions = _ref.predictions;\n    return _react2.default.createElement(\n        'div',\n        { className: 'input_box' },\n        _react2.default.createElement(\n            'form',\n            { onSubmit: function onSubmit(e) {\n                    e.preventDefault();\n                    dispatch((0, _index.addMessage)({ 'origin': 'user', 'text': [input.value] }));\n                    dispatch((0, _index.addInputHistory)({ 'message': input.value }));\n                    dispatch((0, _index.storeCurrentInput)(''));\n                    input.value = '';\n                } },\n            _react2.default.createElement('input', { onChange: function onChange() {\n                    return onChangeInput(dispatch);\n                }, onKeyDown: function onKeyDown(e) {\n                    return _onKeyDown(dispatch, inputHistory, e, predictions);\n                }, type: 'text', placeholder: 'your message here', ref: function ref(node) {\n                    exports.input = input = node;\n                } })\n        )\n    );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        inputHistory: state.inputHistory,\n        predictions: state.predictions\n    };\n};\n\nexports.InputBox = InputBox = (0, _reactRedux.connect)(mapStateToProps)(InputBox);\n\nexports.InputBox = InputBox;\nexports.input = input;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9JbnB1dEJveC5qcz9jYzUxIl0sIm5hbWVzIjpbIl8iLCJpbnB1dCIsIm5vdE51bGwiLCJpbnB1dEhpc3RvcnkiLCJjdXJySWQiLCJnZXRDdXJyZW50SGlzdG9yeSIsInJldmVyc2UiLCJoaXN0b3J5Iiwic2xpY2UiLCJvbktleURvd24iLCJkaXNwYXRjaCIsImUiLCJwcmVkaWN0aW9ucyIsImtleUNvZGUiLCJ3aGljaCIsImxlbmd0aCIsInN0cmlwVGV4dCIsInRleHQiLCJyZXBsYWNlIiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIm9uQ2hhbmdlSW5wdXQiLCJJbnB1dEJveCIsIm5vZGUiLCJtYXBTdGF0ZVRvUHJvcHMiLCJzdGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBQVlBLEM7Ozs7OztBQUVaO0FBQ0EsSUFBSUMsY0FBSjs7QUFFQTtBQUNBLElBQU1DLFVBQVUsU0FBVkEsT0FBVSxDQUFDQyxZQUFEO0FBQUEsV0FBa0JBLGFBQWFDLE1BQWIsS0FBd0IsSUFBMUM7QUFBQSxDQUFoQjtBQUNBO0FBQ0EsSUFBTUMsb0JBQW9CLFNBQXBCQSxpQkFBb0IsQ0FBQ0YsWUFBRDtBQUFBLFdBQWtCSCxFQUFFTSxPQUFGLENBQVVILGFBQWFJLE9BQWIsQ0FBcUJDLEtBQXJCLEVBQVYsRUFBd0NMLGFBQWFDLE1BQXJELENBQWxCO0FBQUEsQ0FBMUI7O0FBRUE7QUFDQSxJQUFNSyxhQUFZLFNBQVpBLFVBQVksQ0FBQ0MsUUFBRCxFQUFXUCxZQUFYLEVBQXlCUSxDQUF6QixFQUE0QkMsV0FBNUIsRUFBNEM7QUFDMUQsUUFBTUMsVUFBVUYsRUFBRUUsT0FBRixJQUFhRixFQUFFRyxLQUEvQjtBQUNBO0FBQ0EsUUFBSUQsWUFBWSxDQUFoQixFQUFrQjtBQUFFO0FBQ2xCLFlBQUdELFlBQVlHLE1BQVosR0FBcUIsQ0FBeEIsRUFBMEI7QUFDeEIsZ0JBQUlDLFlBQVlKLFlBQVksQ0FBWixFQUFlSyxJQUFmLENBQW9CQyxPQUFwQixDQUE0QixJQUE1QixFQUFrQyxFQUFsQyxFQUFzQ0EsT0FBdEMsQ0FBOEMsSUFBOUMsRUFBb0QsRUFBcEQsQ0FBaEI7QUFDQWpCLGtCQUFNa0IsS0FBTixHQUFjSCxTQUFkO0FBQ0Esb0NBQVdmLE1BQU1rQixLQUFqQjtBQUNEO0FBQ0RSLFVBQUVTLGNBQUY7QUFDRDtBQUNELFFBQUlQLFlBQVksRUFBaEIsRUFBb0I7QUFBRTtBQUNsQkgsaUJBQVMsNkJBQWlCLEVBQUMsYUFBYSxJQUFkLEVBQWpCLENBQVQ7QUFDQSxZQUFJUixRQUFRQyxZQUFSLENBQUosRUFBMkI7QUFDdkJGLGtCQUFNa0IsS0FBTixHQUFjZCxrQkFBa0JGLFlBQWxCLENBQWQ7QUFDSDtBQUNKLEtBTEQsTUFLTyxJQUFHVSxZQUFZLEVBQWYsRUFBbUI7QUFBRTtBQUN4QkgsaUJBQVMsNkJBQWlCLEVBQUMsYUFBYSxNQUFkLEVBQWpCLENBQVQ7QUFDQSxZQUFJUixRQUFRQyxZQUFSLENBQUosRUFBMkI7QUFDdkJGLGtCQUFNa0IsS0FBTixHQUFjZCxrQkFBa0JGLFlBQWxCLENBQWQ7QUFDSDtBQUNKO0FBQ0osQ0F0QkQ7O0FBd0JBO0FBQ0EsSUFBTWtCLGdCQUFnQixTQUFoQkEsYUFBZ0IsQ0FBQ1gsUUFBRCxFQUFjO0FBQ2hDQSxhQUFTLDhCQUFrQlQsTUFBTWtCLEtBQXhCLENBQVQ7QUFDQSw0QkFBV2xCLE1BQU1rQixLQUFqQjtBQUNBLDRCQUFXbEIsTUFBTWtCLEtBQWpCO0FBQ0gsQ0FKRDs7QUFNQTtBQUNBLElBQUlHLFdBQVc7QUFBQSxRQUFHWixRQUFILFFBQUdBLFFBQUg7QUFBQSxRQUFhUCxZQUFiLFFBQWFBLFlBQWI7QUFBQSxRQUEyQlMsV0FBM0IsUUFBMkJBLFdBQTNCO0FBQUEsV0FDWDtBQUFBO0FBQUEsVUFBSyxXQUFVLFdBQWY7QUFDSTtBQUFBO0FBQUEsY0FBTSxVQUFVLHFCQUFLO0FBQ2pCRCxzQkFBRVMsY0FBRjtBQUNBViw2QkFBUyx1QkFBVyxFQUFDLFVBQVUsTUFBWCxFQUFtQixRQUFRLENBQUNULE1BQU1rQixLQUFQLENBQTNCLEVBQVgsQ0FBVDtBQUNBVCw2QkFBUyw0QkFBZ0IsRUFBQyxXQUFXVCxNQUFNa0IsS0FBbEIsRUFBaEIsQ0FBVDtBQUNBVCw2QkFBUyw4QkFBa0IsRUFBbEIsQ0FBVDtBQUNBVCwwQkFBTWtCLEtBQU4sR0FBYyxFQUFkO0FBQ0gsaUJBTkQ7QUFPSSxxREFBTyxVQUFVO0FBQUEsMkJBQU1FLGNBQWNYLFFBQWQsQ0FBTjtBQUFBLGlCQUFqQixFQUFnRCxXQUFXLG1CQUFDQyxDQUFEO0FBQUEsMkJBQU9GLFdBQVVDLFFBQVYsRUFBb0JQLFlBQXBCLEVBQWtDUSxDQUFsQyxFQUFxQ0MsV0FBckMsQ0FBUDtBQUFBLGlCQUEzRCxFQUFxSCxNQUFLLE1BQTFILEVBQWlJLGFBQVksbUJBQTdJLEVBQWlLLEtBQUssbUJBQVE7QUFBQyw0QkFXektYLEtBWHlLLFdBQVFzQixJQUFSO0FBQWMsaUJBQTdMO0FBUEo7QUFESixLQURXO0FBQUEsQ0FBZjs7QUFhQSxJQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEtBQUQ7QUFBQSxXQUFZO0FBQ2hDdEIsc0JBQWNzQixNQUFNdEIsWUFEWTtBQUVoQ1MscUJBQWFhLE1BQU1iO0FBRmEsS0FBWjtBQUFBLENBQXhCOztBQUtBLFFBRVFVLFFBRlIsY0FBVyx5QkFBUUUsZUFBUixFQUF5QkYsUUFBekIsQ0FBWDs7UUFFUUEsUSxHQUFBQSxRO1FBQVVyQixLLEdBQUFBLEsiLCJmaWxlIjoiMTMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBhZGRNZXNzYWdlLCBhZGRJbnB1dEhpc3RvcnksIG1vdmVJbnB1dEhpc3RvcnksIHN0b3JlQ3VycmVudElucHV0LCB1cGRhdGVEb2NFdmVudCwgc2V0RG9jcyB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuaW1wb3J0IHsgdXBkYXRlSGludCwgdXBkYXRlRG9jcyB9IGZyb20gJy4uL2FwaV9jYWxscy9weXRob24uanMnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG4vLyBkb20gcmVmZXJlbmNlIGVsZW1lbnQgZm9yIG1haW4gdXNlciBpbnB1dCBib3hcbmxldCBpbnB1dDtcblxuLy8gaGVscGVyIHRvIGNoZWNrIHdoZXRoZXIgaGlzdG9yeSBpZCAodHJhY2tlciBpbiBsaXN0KSBpcyBub3QgbnVsbCAod2h5IGRvZXMgdGhpcyBleGlzdD8/KVxuY29uc3Qgbm90TnVsbCA9IChpbnB1dEhpc3RvcnkpID0+IGlucHV0SGlzdG9yeS5jdXJySWQgIT09IG51bGw7XG4vLyBnZXQgY3VycmVudGx5IHNlbGVjdGVkIGhpc3RvcnkgZWxlbWVudFxuY29uc3QgZ2V0Q3VycmVudEhpc3RvcnkgPSAoaW5wdXRIaXN0b3J5KSA9PiBfLnJldmVyc2UoaW5wdXRIaXN0b3J5Lmhpc3Rvcnkuc2xpY2UoKSlbaW5wdXRIaXN0b3J5LmN1cnJJZF07XG5cbi8vIGtleSBiaW5kZXIgdG8gZ3JhYiBzcGVjaWFsIGtleXN0cm9rZXMgaW4gbWFpbiBpbnB1dCBmaWVsZFxuY29uc3Qgb25LZXlEb3duID0gKGRpc3BhdGNoLCBpbnB1dEhpc3RvcnksIGUsIHByZWRpY3Rpb25zKSA9PiB7XG4gICAgY29uc3Qga2V5Q29kZSA9IGUua2V5Q29kZSB8fCBlLndoaWNoO1xuICAgIC8vIHNvIHRoaXMgaXMgZ3JlYXQsIGJ1dCB0YWIgY29tcGxldGlvbiBoYXMgbm90aGluZyB0byBkbyB3aXRoIGhpc3RvcnkuLi5cbiAgICBpZiAoa2V5Q29kZSA9PT0gOSl7IC8vIHRhYlxuICAgICAgaWYocHJlZGljdGlvbnMubGVuZ3RoID4gMCl7XG4gICAgICAgIGxldCBzdHJpcFRleHQgPSBwcmVkaWN0aW9uc1swXS50ZXh0LnJlcGxhY2UoL3svZywgJycpLnJlcGxhY2UoL30vZywgJycpO1xuICAgICAgICBpbnB1dC52YWx1ZSA9IHN0cmlwVGV4dDtcbiAgICAgICAgdXBkYXRlSGludChpbnB1dC52YWx1ZSk7XG4gICAgICB9XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICAgIGlmIChrZXlDb2RlID09PSAzOCkgeyAvLyB1cCBhcnJvd1xuICAgICAgICBkaXNwYXRjaChtb3ZlSW5wdXRIaXN0b3J5KHsnZGlyZWN0aW9uJzogJ3VwJ30pKTtcbiAgICAgICAgaWYgKG5vdE51bGwoaW5wdXRIaXN0b3J5KSkge1xuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBnZXRDdXJyZW50SGlzdG9yeShpbnB1dEhpc3RvcnkpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmKGtleUNvZGUgPT09IDQwKSB7IC8vIGRvd24gYXJyb3dcbiAgICAgICAgZGlzcGF0Y2gobW92ZUlucHV0SGlzdG9yeSh7J2RpcmVjdGlvbic6ICdkb3duJ30pKTtcbiAgICAgICAgaWYgKG5vdE51bGwoaW5wdXRIaXN0b3J5KSkge1xuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSBnZXRDdXJyZW50SGlzdG9yeShpbnB1dEhpc3RvcnkpO1xuICAgICAgICB9XG4gICAgfVxufTtcblxuLy8gc3RvcmUgaW5wdXQgdmFsdWUsIGFuZCB1cGRhdGUgaGludCBhbmQgZG9jc1xuY29uc3Qgb25DaGFuZ2VJbnB1dCA9IChkaXNwYXRjaCkgPT4ge1xuICAgIGRpc3BhdGNoKHN0b3JlQ3VycmVudElucHV0KGlucHV0LnZhbHVlKSk7XG4gICAgdXBkYXRlSGludChpbnB1dC52YWx1ZSk7XG4gICAgdXBkYXRlRG9jcyhpbnB1dC52YWx1ZSk7XG59O1xuXG4vLyB0aGlzIGNvbXBvbmVudCBkZWZpbmVzIG1haW4gdGV4dCBpbnB1dFxubGV0IElucHV0Qm94ID0gKHsgZGlzcGF0Y2gsIGlucHV0SGlzdG9yeSwgcHJlZGljdGlvbnMgfSkgPT5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImlucHV0X2JveFwiPlxuICAgICAgICA8Zm9ybSBvblN1Ym1pdD17ZSA9PiB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBkaXNwYXRjaChhZGRNZXNzYWdlKHsnb3JpZ2luJzogJ3VzZXInLCAndGV4dCc6IFtpbnB1dC52YWx1ZV0gfSkpO1xuICAgICAgICAgICAgZGlzcGF0Y2goYWRkSW5wdXRIaXN0b3J5KHsnbWVzc2FnZSc6IGlucHV0LnZhbHVlfSkpO1xuICAgICAgICAgICAgZGlzcGF0Y2goc3RvcmVDdXJyZW50SW5wdXQoJycpKTtcbiAgICAgICAgICAgIGlucHV0LnZhbHVlID0gJyc7XG4gICAgICAgIH19PlxuICAgICAgICAgICAgPGlucHV0IG9uQ2hhbmdlPXsoKSA9PiBvbkNoYW5nZUlucHV0KGRpc3BhdGNoKX0gb25LZXlEb3duPXsoZSkgPT4gb25LZXlEb3duKGRpc3BhdGNoLCBpbnB1dEhpc3RvcnksIGUsIHByZWRpY3Rpb25zKX0gdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cInlvdXIgbWVzc2FnZSBoZXJlXCIgcmVmPXtub2RlID0+IHtpbnB1dCA9IG5vZGU7fX0+PC9pbnB1dD5cbiAgICAgICAgPC9mb3JtPlxuICAgIDwvZGl2PjtcblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiAoe1xuICAgIGlucHV0SGlzdG9yeTogc3RhdGUuaW5wdXRIaXN0b3J5LFxuICAgIHByZWRpY3Rpb25zOiBzdGF0ZS5wcmVkaWN0aW9ucyxcbn0pO1xuXG5JbnB1dEJveCA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKShJbnB1dEJveCk7XG5cbmV4cG9ydCB7SW5wdXRCb3gsIGlucHV0fTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9jb250YWluZXJzL0lucHV0Qm94LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

})