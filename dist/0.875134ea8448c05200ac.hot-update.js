webpackHotUpdate(0,{

/***/ 514:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _Conversation = __webpack_require__(494);\n\nvar _Conversation2 = _interopRequireDefault(_Conversation);\n\nvar _PredictionStrip = __webpack_require__(504);\n\nvar _InputBox = __webpack_require__(130);\n\nvar _python = __webpack_require__(61);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// dom element for conversation window, important for scroll etc.\nvar messageDOM = void 0;\n\n// The conversation pane hold information about the current conversation, as well as the history of previous conversations\n\nvar ConversationPane = function (_Component) {\n    _inherits(ConversationPane, _Component);\n\n    function ConversationPane() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ConversationPane);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ConversationPane.__proto__ || Object.getPrototypeOf(ConversationPane)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n            return _react2.default.createElement(\n                'div',\n                { className: 'left_pane' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'content_box', id: 'message_pane', ref: function ref(node) {\n                            messageDOM = node;\n                        } },\n                    _this.props.history.map(function (convo) {\n                        return _react2.default.createElement(_Conversation2.default, { key: convo.id, active: false, messages: convo.messages, title: convo.title, args: convo.args, id: convo.id, hidden: convo.hidden });\n                    }),\n                    _react2.default.createElement(_Conversation2.default, { key: _this.props.convo.id, active: true, messages: _this.props.messages, title: _this.props.convo.title, args: _this.props.args, id: _this.props.convo.id, hidden: _this.props.convo.hidden })\n                ),\n                _react2.default.createElement(_PredictionStrip.PredictionStrip, null),\n                _react2.default.createElement(_InputBox.InputBox, null)\n            );\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(ConversationPane, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _python.getVariables)();\n            // get history from the server on load\n            (0, _python.getHistory)();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            // Notify Iris when the message list is updated\n            // moved this out of the reducer\n            messageDOM.scrollTop = messageDOM.scrollHeight;\n            (0, _python.updateHint)(_InputBox.input.value);\n\n            var _props = this.props,\n                messages = _props.messages,\n                state = _props.state,\n                conversation = _props.conversation;\n\n            if (messages.length > 0 && messages[messages.length - 1].origin !== 'iris') {\n                // when new message is user message, post!\n                (0, _python.postMessages)(messages, state, conversation);\n            }\n            if (messages.length === 0 || messages[messages.length - 1].origin === 'iris') {\n                // we're going to save message history on the server whenever iris sends a message back\n                (0, _python.setHistory)(messages, state, conversation);\n            }\n        }\n    }]);\n\n    return ConversationPane;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        convo: state.conversation.currentConvo,\n        messages: state.conversation.currentConvo.messages,\n        conversation: state.conversation,\n        history: state.conversation.history,\n        state: state.conversation.state,\n        args: state.conversation.currentConvo.args\n    };\n};\n\nConversationPane = (0, _reactRedux.connect)(mapStateToProps)(ConversationPane);\n\nexports.default = ConversationPane;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9Db252ZXJzYXRpb25QYW5lLmpzPzUwODUiXSwibmFtZXMiOlsibWVzc2FnZURPTSIsIkNvbnZlcnNhdGlvblBhbmUiLCJyZW5kZXIiLCJub2RlIiwicHJvcHMiLCJoaXN0b3J5IiwibWFwIiwiY29udm8iLCJpZCIsIm1lc3NhZ2VzIiwidGl0bGUiLCJhcmdzIiwiaGlkZGVuIiwic2Nyb2xsVG9wIiwic2Nyb2xsSGVpZ2h0IiwidmFsdWUiLCJzdGF0ZSIsImNvbnZlcnNhdGlvbiIsImxlbmd0aCIsIm9yaWdpbiIsIm1hcFN0YXRlVG9Qcm9wcyIsImN1cnJlbnRDb252byJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTtBQUNBLElBQUlBLG1CQUFKOztBQUVBOztJQUNNQyxnQjs7Ozs7Ozs7Ozs7Ozs7OE1BMEJGQyxNLEdBQVM7QUFBQSxtQkFDTDtBQUFBO0FBQUEsa0JBQUssV0FBVSxXQUFmO0FBQ0k7QUFBQTtBQUFBLHNCQUFLLFdBQVUsYUFBZixFQUE2QixJQUFHLGNBQWhDLEVBQStDLEtBQUssYUFBQ0MsSUFBRCxFQUFVO0FBQUVILHlDQUFhRyxJQUFiO0FBQW9CLHlCQUFwRjtBQUNNLDBCQUFLQyxLQUFMLENBQVdDLE9BQVgsQ0FBbUJDLEdBQW5CLENBQXVCLGlCQUFTO0FBQzlCLCtCQUFPLHdEQUFjLEtBQUtDLE1BQU1DLEVBQXpCLEVBQTZCLFFBQVEsS0FBckMsRUFBNEMsVUFBVUQsTUFBTUUsUUFBNUQsRUFBc0UsT0FBT0YsTUFBTUcsS0FBbkYsRUFBMEYsTUFBTUgsTUFBTUksSUFBdEcsRUFBNEcsSUFBSUosTUFBTUMsRUFBdEgsRUFBMEgsUUFBUUQsTUFBTUssTUFBeEksR0FBUDtBQUNILHFCQUZDLENBRE47QUFJSSw0RUFBYyxLQUFLLE1BQUtSLEtBQUwsQ0FBV0csS0FBWCxDQUFpQkMsRUFBcEMsRUFBd0MsUUFBUSxJQUFoRCxFQUFzRCxVQUFVLE1BQUtKLEtBQUwsQ0FBV0ssUUFBM0UsRUFBcUYsT0FBTyxNQUFLTCxLQUFMLENBQVdHLEtBQVgsQ0FBaUJHLEtBQTdHLEVBQW9ILE1BQU0sTUFBS04sS0FBTCxDQUFXTyxJQUFySSxFQUEySSxJQUFJLE1BQUtQLEtBQUwsQ0FBV0csS0FBWCxDQUFpQkMsRUFBaEssRUFBb0ssUUFBUSxNQUFLSixLQUFMLENBQVdHLEtBQVgsQ0FBaUJLLE1BQTdMO0FBSkosaUJBREo7QUFPSSxxRkFQSjtBQVFJO0FBUkosYUFESztBQUFBLFM7Ozs7OzRDQXhCVztBQUNoQjtBQUNBO0FBQ0E7QUFFSDs7OzZDQUVvQjtBQUNqQjtBQUNBO0FBQ0FaLHVCQUFXYSxTQUFYLEdBQXVCYixXQUFXYyxZQUFsQztBQUNBLG9DQUFXLGdCQUFNQyxLQUFqQjs7QUFKaUIseUJBTXlCLEtBQUtYLEtBTjlCO0FBQUEsZ0JBTVRLLFFBTlMsVUFNVEEsUUFOUztBQUFBLGdCQU1DTyxLQU5ELFVBTUNBLEtBTkQ7QUFBQSxnQkFNUUMsWUFOUixVQU1RQSxZQU5SOztBQU9qQixnQkFBSVIsU0FBU1MsTUFBVCxHQUFrQixDQUFsQixJQUF1QlQsU0FBU0EsU0FBU1MsTUFBVCxHQUFrQixDQUEzQixFQUE4QkMsTUFBOUIsS0FBeUMsTUFBcEUsRUFBNEU7QUFDeEU7QUFDQSwwQ0FBYVYsUUFBYixFQUF1Qk8sS0FBdkIsRUFBOEJDLFlBQTlCO0FBQ0g7QUFDRCxnQkFBSVIsU0FBU1MsTUFBVCxLQUFvQixDQUFwQixJQUF5QlQsU0FBU0EsU0FBU1MsTUFBVCxHQUFrQixDQUEzQixFQUE4QkMsTUFBOUIsS0FBeUMsTUFBdEUsRUFBOEU7QUFDMUU7QUFDQSx3Q0FBV1YsUUFBWCxFQUFxQk8sS0FBckIsRUFBNEJDLFlBQTVCO0FBQ0g7QUFDSjs7Ozs7O0FBZUwsSUFBTUcsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDSixLQUFEO0FBQUEsV0FBWTtBQUNoQ1QsZUFBT1MsTUFBTUMsWUFBTixDQUFtQkksWUFETTtBQUVoQ1osa0JBQVVPLE1BQU1DLFlBQU4sQ0FBbUJJLFlBQW5CLENBQWdDWixRQUZWO0FBR2hDUSxzQkFBY0QsTUFBTUMsWUFIWTtBQUloQ1osaUJBQVNXLE1BQU1DLFlBQU4sQ0FBbUJaLE9BSkk7QUFLaENXLGVBQU9BLE1BQU1DLFlBQU4sQ0FBbUJELEtBTE07QUFNaENMLGNBQU1LLE1BQU1DLFlBQU4sQ0FBbUJJLFlBQW5CLENBQWdDVjtBQU5OLEtBQVo7QUFBQSxDQUF4Qjs7QUFTQVYsbUJBQW1CLHlCQUFRbUIsZUFBUixFQUF5Qm5CLGdCQUF6QixDQUFuQjs7a0JBRWVBLGdCIiwiZmlsZSI6IjUxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMsIENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgQ29udmVyc2F0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvQ29udmVyc2F0aW9uJztcbmltcG9ydCB7IFByZWRpY3Rpb25TdHJpcCB9IGZyb20gJy4uL2NvbXBvbmVudHMvUHJlZGljdGlvblN0cmlwJztcbmltcG9ydCB7IGlucHV0LCBJbnB1dEJveCB9IGZyb20gJy4vSW5wdXRCb3gnO1xuaW1wb3J0IHsgcG9zdE1lc3NhZ2VzLCBnZXRWYXJpYWJsZXMsIGdldEhpc3RvcnksIHNldEhpc3RvcnksIHVwZGF0ZUhpbnQgfSBmcm9tICcuLi9hcGlfY2FsbHMvcHl0aG9uJztcblxuLy8gZG9tIGVsZW1lbnQgZm9yIGNvbnZlcnNhdGlvbiB3aW5kb3csIGltcG9ydGFudCBmb3Igc2Nyb2xsIGV0Yy5cbmxldCBtZXNzYWdlRE9NO1xuXG4vLyBUaGUgY29udmVyc2F0aW9uIHBhbmUgaG9sZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBjb252ZXJzYXRpb24sIGFzIHdlbGwgYXMgdGhlIGhpc3Rvcnkgb2YgcHJldmlvdXMgY29udmVyc2F0aW9uc1xuY2xhc3MgQ29udmVyc2F0aW9uUGFuZSBleHRlbmRzIENvbXBvbmVudCB7XG5cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgZ2V0VmFyaWFibGVzKCk7XG4gICAgICAgIC8vIGdldCBoaXN0b3J5IGZyb20gdGhlIHNlcnZlciBvbiBsb2FkXG4gICAgICAgIGdldEhpc3RvcnkoKTtcblxuICAgIH1cblxuICAgIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICAgICAgLy8gTm90aWZ5IElyaXMgd2hlbiB0aGUgbWVzc2FnZSBsaXN0IGlzIHVwZGF0ZWRcbiAgICAgICAgLy8gbW92ZWQgdGhpcyBvdXQgb2YgdGhlIHJlZHVjZXJcbiAgICAgICAgbWVzc2FnZURPTS5zY3JvbGxUb3AgPSBtZXNzYWdlRE9NLnNjcm9sbEhlaWdodDtcbiAgICAgICAgdXBkYXRlSGludChpbnB1dC52YWx1ZSk7XG5cbiAgICAgICAgY29uc3QgeyBtZXNzYWdlcywgc3RhdGUsIGNvbnZlcnNhdGlvbiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKG1lc3NhZ2VzLmxlbmd0aCA+IDAgJiYgbWVzc2FnZXNbbWVzc2FnZXMubGVuZ3RoIC0gMV0ub3JpZ2luICE9PSAnaXJpcycpIHtcbiAgICAgICAgICAgIC8vIHdoZW4gbmV3IG1lc3NhZ2UgaXMgdXNlciBtZXNzYWdlLCBwb3N0IVxuICAgICAgICAgICAgcG9zdE1lc3NhZ2VzKG1lc3NhZ2VzLCBzdGF0ZSwgY29udmVyc2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWVzc2FnZXMubGVuZ3RoID09PSAwIHx8IG1lc3NhZ2VzW21lc3NhZ2VzLmxlbmd0aCAtIDFdLm9yaWdpbiA9PT0gJ2lyaXMnKSB7XG4gICAgICAgICAgICAvLyB3ZSdyZSBnb2luZyB0byBzYXZlIG1lc3NhZ2UgaGlzdG9yeSBvbiB0aGUgc2VydmVyIHdoZW5ldmVyIGlyaXMgc2VuZHMgYSBtZXNzYWdlIGJhY2tcbiAgICAgICAgICAgIHNldEhpc3RvcnkobWVzc2FnZXMsIHN0YXRlLCBjb252ZXJzYXRpb24pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyID0gKCkgPT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsZWZ0X3BhbmVcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudF9ib3hcIiBpZD1cIm1lc3NhZ2VfcGFuZVwiIHJlZj17KG5vZGUpID0+IHsgbWVzc2FnZURPTSA9IG5vZGU7IH19PlxuICAgICAgICAgICAgICAgIHsgdGhpcy5wcm9wcy5oaXN0b3J5Lm1hcChjb252byA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiA8Q29udmVyc2F0aW9uIGtleT17Y29udm8uaWR9IGFjdGl2ZT17ZmFsc2V9IG1lc3NhZ2VzPXtjb252by5tZXNzYWdlc30gdGl0bGU9e2NvbnZvLnRpdGxlfSBhcmdzPXtjb252by5hcmdzfSBpZD17Y29udm8uaWR9IGhpZGRlbj17Y29udm8uaGlkZGVufSAvPjtcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8Q29udmVyc2F0aW9uIGtleT17dGhpcy5wcm9wcy5jb252by5pZH0gYWN0aXZlPXt0cnVlfSBtZXNzYWdlcz17dGhpcy5wcm9wcy5tZXNzYWdlc30gdGl0bGU9e3RoaXMucHJvcHMuY29udm8udGl0bGV9IGFyZ3M9e3RoaXMucHJvcHMuYXJnc30gaWQ9e3RoaXMucHJvcHMuY29udm8uaWR9IGhpZGRlbj17dGhpcy5wcm9wcy5jb252by5oaWRkZW59IC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxQcmVkaWN0aW9uU3RyaXAgLz5cbiAgICAgICAgICAgIDxJbnB1dEJveCAvPlxuICAgICAgICA8L2Rpdj47XG59XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHtcbiAgICBjb252bzogc3RhdGUuY29udmVyc2F0aW9uLmN1cnJlbnRDb252byxcbiAgICBtZXNzYWdlczogc3RhdGUuY29udmVyc2F0aW9uLmN1cnJlbnRDb252by5tZXNzYWdlcyxcbiAgICBjb252ZXJzYXRpb246IHN0YXRlLmNvbnZlcnNhdGlvbixcbiAgICBoaXN0b3J5OiBzdGF0ZS5jb252ZXJzYXRpb24uaGlzdG9yeSxcbiAgICBzdGF0ZTogc3RhdGUuY29udmVyc2F0aW9uLnN0YXRlLFxuICAgIGFyZ3M6IHN0YXRlLmNvbnZlcnNhdGlvbi5jdXJyZW50Q29udm8uYXJnc1xufSk7XG5cbkNvbnZlcnNhdGlvblBhbmUgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoQ29udmVyc2F0aW9uUGFuZSk7XG5cbmV4cG9ydCBkZWZhdWx0IENvbnZlcnNhdGlvblBhbmU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvY29udGFpbmVycy9Db252ZXJzYXRpb25QYW5lLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

})