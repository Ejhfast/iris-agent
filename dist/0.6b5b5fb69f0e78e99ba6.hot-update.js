webpackHotUpdate(0,{

/***/ 423:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputBox = __webpack_require__(265);\n\nvar _python = __webpack_require__(166);\n\nvar _reactRedux = __webpack_require__(63);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar setInput = function setInput(text) {\n    return function () {\n        var stripText = text.replace(/{/g, '').replace(/}/g, '');\n        _InputBox.input.value = stripText;\n        (0, _python.updateHint)(stripText);\n    };\n};\n\nvar PredictionStrip = function PredictionStrip(_ref) {\n    var predictions = _ref.predictions;\n    return _react2.default.createElement(\n        'div',\n        { className: 'prediction_strip' },\n        _react2.default.createElement(\n            'div',\n            { className: 'predictions' },\n            predictions.map(function (prediction, i) {\n                return _react2.default.createElement(\n                    'span',\n                    { onClick: setInput(prediction), className: 'prediction {i}' },\n                    prediction\n                );\n            })\n        )\n    );\n};\n\nPredictionStrip.propTypes = {\n    predictions: _react.PropTypes.any\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        predictions: state.predictions\n    };\n};\n\nPredictionStrip = (0, _reactRedux.connect)(mapStateToProps)(PredictionStrip);\n\nexports.default = PredictionStrip;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanM/ZDFhMiJdLCJuYW1lcyI6WyJzZXRJbnB1dCIsInRleHQiLCJzdHJpcFRleHQiLCJyZXBsYWNlIiwidmFsdWUiLCJQcmVkaWN0aW9uU3RyaXAiLCJwcmVkaWN0aW9ucyIsIm1hcCIsInByZWRpY3Rpb24iLCJpIiwicHJvcFR5cGVzIiwiYW55IiwibWFwU3RhdGVUb1Byb3BzIiwic3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7QUFFQSxJQUFNQSxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsSUFBRCxFQUFVO0FBQ3ZCLFdBQU8sWUFBTTtBQUNULFlBQUlDLFlBQVlELEtBQUtFLE9BQUwsQ0FBYSxJQUFiLEVBQW1CLEVBQW5CLEVBQXVCQSxPQUF2QixDQUErQixJQUEvQixFQUFxQyxFQUFyQyxDQUFoQjtBQUNBLHdCQUFNQyxLQUFOLEdBQWNGLFNBQWQ7QUFDQSxnQ0FBV0EsU0FBWDtBQUNILEtBSkQ7QUFLSCxDQU5EOztBQVFBLElBQUlHLGtCQUFrQjtBQUFBLFFBQUVDLFdBQUYsUUFBRUEsV0FBRjtBQUFBLFdBQ2xCO0FBQUE7QUFBQSxVQUFLLFdBQVUsa0JBQWY7QUFDRTtBQUFBO0FBQUEsY0FBSyxXQUFVLGFBQWY7QUFDR0Esd0JBQVlDLEdBQVosQ0FBZ0IsVUFBQ0MsVUFBRCxFQUFZQyxDQUFaO0FBQUEsdUJBQWtCO0FBQUE7QUFBQSxzQkFBTSxTQUFTVCxTQUFTUSxVQUFULENBQWYsRUFBcUMsV0FBVSxnQkFBL0M7QUFBa0VBO0FBQWxFLGlCQUFsQjtBQUFBLGFBQWhCO0FBREg7QUFERixLQURrQjtBQUFBLENBQXRCOztBQU9BSCxnQkFBZ0JLLFNBQWhCLEdBQTRCO0FBQ3hCSixpQkFBYSxpQkFBVUs7QUFEQyxDQUE1Qjs7QUFJQSxJQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEtBQUQ7QUFBQSxXQUFZO0FBQ2hDUCxxQkFBYU8sTUFBTVA7QUFEYSxLQUFaO0FBQUEsQ0FBeEI7O0FBSUFELGtCQUFrQix5QkFBUU8sZUFBUixFQUF5QlAsZUFBekIsQ0FBbEI7O2tCQUVlQSxlIiwiZmlsZSI6IjQyMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBpbnB1dCB9IGZyb20gJy4uL2NvbnRhaW5lcnMvSW5wdXRCb3gnO1xuaW1wb3J0IHsgdXBkYXRlSGludCB9IGZyb20gJy4uL2FwaV9jYWxscy9weXRob24uanMnO1xuXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuXG5jb25zdCBzZXRJbnB1dCA9ICh0ZXh0KSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbGV0IHN0cmlwVGV4dCA9IHRleHQucmVwbGFjZSgvey9nLCAnJykucmVwbGFjZSgvfS9nLCAnJyk7XG4gICAgICAgIGlucHV0LnZhbHVlID0gc3RyaXBUZXh0O1xuICAgICAgICB1cGRhdGVIaW50KHN0cmlwVGV4dCk7XG4gICAgfTtcbn07XG5cbmxldCBQcmVkaWN0aW9uU3RyaXAgPSAoe3ByZWRpY3Rpb25zfSkgPT5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rpb25fc3RyaXBcIj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJlZGljdGlvbnNcIj5cbiAgICAgICAge3ByZWRpY3Rpb25zLm1hcCgocHJlZGljdGlvbixpKSA9PiA8c3BhbiBvbkNsaWNrPXtzZXRJbnB1dChwcmVkaWN0aW9uKX0gY2xhc3NOYW1lPVwicHJlZGljdGlvbiB7aX1cIj57IHByZWRpY3Rpb24gfTwvc3Bhbj4pfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+O1xuXG5QcmVkaWN0aW9uU3RyaXAucHJvcFR5cGVzID0ge1xuICAgIHByZWRpY3Rpb25zOiBQcm9wVHlwZXMuYW55XG59O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XG4gICAgcHJlZGljdGlvbnM6IHN0YXRlLnByZWRpY3Rpb25zXG59KTtcblxuUHJlZGljdGlvblN0cmlwID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKFByZWRpY3Rpb25TdHJpcCk7XG5cbmV4cG9ydCBkZWZhdWx0IFByZWRpY3Rpb25TdHJpcDtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9jb21wb25lbnRzL1ByZWRpY3Rpb25TdHJpcC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})