webpackHotUpdate(0,{

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.filterTable = filterTable;\nexports.addMessage = addMessage;\nexports.addInputHistory = addInputHistory;\nexports.moveInputHistory = moveInputHistory;\nexports.hint = hint;\nexports.updateFunc = updateFunc;\nexports.updateResults = updateResults;\nexports.updateDocEvent = updateDocEvent;\nexports.setDocs = setDocs;\nexports.setCodeEdit = setCodeEdit;\nexports.updateCodeEditor = updateCodeEditor;\nexports.addCommandArg = addCommandArg;\nexports.updateCommandArg = updateCommandArg;\nexports.deleteCommandArg = deleteCommandArg;\nexports.storeCurrentInput = storeCurrentInput;\nexports.hideConversation = hideConversation;\n\nvar _types = __webpack_require__(274);\n\nvar types = _interopRequireWildcard(_types);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction filterTable(filter) {\n    return {\n        type: types.FILTER,\n        filter: filter\n    };\n}\n\nfunction addMessage(message) {\n    return _extends({\n        type: types.ADD_MESSAGE\n    }, message);\n}\n\nfunction addInputHistory(message) {\n    return _extends({\n        type: types.ADD_INPUT_HISTORY\n    }, message);\n}\n\nfunction moveInputHistory(message) {\n    return _extends({\n        type: types.MOVE_INPUT_HISTORY\n    }, message);\n}\n\nfunction hint(message) {\n    return _extends({\n        type: types.HINT\n    }, message);\n}\n\nfunction updateFunc(message) {\n    return _extends({\n        type: types.UPDATE_FUNC\n    }, message);\n}\n\nfunction updateResults(message) {\n    return _extends({\n        type: types.UPDATE_RESULTS\n    }, message);\n}\n\nfunction updateDocEvent(message) {\n    return _extends({\n        type: types.UPDATE_DOCS\n    }, message);\n}\n\nfunction setDocs(message) {\n    return _extends({\n        type: types.SET_DOCS\n    }, message);\n}\n\nfunction setCodeEdit(message) {\n    return _extends({\n        type: types.SET_CODE_EDIT\n    }, message);\n}\n\nfunction updateCodeEditor(name, value) {\n    return {\n        type: types.UPDATE_CODE_EDITOR,\n        value: value,\n        name: name\n    };\n}\n\nfunction addCommandArg() {\n    return {\n        type: types.ADD_COMMAND_ARG\n    };\n}\n\nfunction updateCommandArg(id, values) {\n    return {\n        type: types.UPDATE_COMMAND_ARG,\n        id: id,\n        values: values\n    };\n}\n\nfunction deleteCommandArg(id) {\n    return {\n        type: types.DELETE_COMMAND_ARG,\n        id: id\n    };\n}\n\nfunction storeCurrentInput(input) {\n    return {\n        type: types.STORE_CURRENT_INPUT,\n        currentInput: input\n    };\n}\n\nfunction hideConversation(id) {\n    return {\n        type: types.HIDE_CONVERSATION,\n        id: id\n    };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYWN0aW9ucy9pbmRleC5qcz8xMjM2Il0sIm5hbWVzIjpbImZpbHRlclRhYmxlIiwiYWRkTWVzc2FnZSIsImFkZElucHV0SGlzdG9yeSIsIm1vdmVJbnB1dEhpc3RvcnkiLCJoaW50IiwidXBkYXRlRnVuYyIsInVwZGF0ZVJlc3VsdHMiLCJ1cGRhdGVEb2NFdmVudCIsInNldERvY3MiLCJzZXRDb2RlRWRpdCIsInVwZGF0ZUNvZGVFZGl0b3IiLCJhZGRDb21tYW5kQXJnIiwidXBkYXRlQ29tbWFuZEFyZyIsImRlbGV0ZUNvbW1hbmRBcmciLCJzdG9yZUN1cnJlbnRJbnB1dCIsImhpZGVDb252ZXJzYXRpb24iLCJ0eXBlcyIsImZpbHRlciIsInR5cGUiLCJGSUxURVIiLCJtZXNzYWdlIiwiQUREX01FU1NBR0UiLCJBRERfSU5QVVRfSElTVE9SWSIsIk1PVkVfSU5QVVRfSElTVE9SWSIsIkhJTlQiLCJVUERBVEVfRlVOQyIsIlVQREFURV9SRVNVTFRTIiwiVVBEQVRFX0RPQ1MiLCJTRVRfRE9DUyIsIlNFVF9DT0RFX0VESVQiLCJuYW1lIiwidmFsdWUiLCJVUERBVEVfQ09ERV9FRElUT1IiLCJBRERfQ09NTUFORF9BUkciLCJpZCIsInZhbHVlcyIsIlVQREFURV9DT01NQU5EX0FSRyIsIkRFTEVURV9DT01NQU5EX0FSRyIsImlucHV0IiwiU1RPUkVfQ1VSUkVOVF9JTlBVVCIsImN1cnJlbnRJbnB1dCIsIkhJREVfQ09OVkVSU0FUSU9OIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztRQUVnQkEsVyxHQUFBQSxXO1FBT0FDLFUsR0FBQUEsVTtRQU9BQyxlLEdBQUFBLGU7UUFPQUMsZ0IsR0FBQUEsZ0I7UUFPQUMsSSxHQUFBQSxJO1FBT0FDLFUsR0FBQUEsVTtRQU9BQyxhLEdBQUFBLGE7UUFPQUMsYyxHQUFBQSxjO1FBT0FDLE8sR0FBQUEsTztRQU9BQyxXLEdBQUFBLFc7UUFPQUMsZ0IsR0FBQUEsZ0I7UUFRQUMsYSxHQUFBQSxhO1FBTUFDLGdCLEdBQUFBLGdCO1FBUUFDLGdCLEdBQUFBLGdCO1FBT0FDLGlCLEdBQUFBLGlCO1FBT0FDLGdCLEdBQUFBLGdCOztBQTVHaEI7O0lBQVlDLEs7Ozs7QUFFTCxTQUFTaEIsV0FBVCxDQUFxQmlCLE1BQXJCLEVBQTZCO0FBQ2hDLFdBQU87QUFDSEMsY0FBTUYsTUFBTUcsTUFEVDtBQUVIRjtBQUZHLEtBQVA7QUFJSDs7QUFFTSxTQUFTaEIsVUFBVCxDQUFvQm1CLE9BQXBCLEVBQTZCO0FBQ2hDO0FBQ0lGLGNBQU1GLE1BQU1LO0FBRGhCLE9BRU9ELE9BRlA7QUFJSDs7QUFFTSxTQUFTbEIsZUFBVCxDQUF5QmtCLE9BQXpCLEVBQWtDO0FBQ3JDO0FBQ0lGLGNBQU1GLE1BQU1NO0FBRGhCLE9BRU9GLE9BRlA7QUFJSDs7QUFFTSxTQUFTakIsZ0JBQVQsQ0FBMEJpQixPQUExQixFQUFtQztBQUN0QztBQUNJRixjQUFNRixNQUFNTztBQURoQixPQUVPSCxPQUZQO0FBSUg7O0FBRU0sU0FBU2hCLElBQVQsQ0FBY2dCLE9BQWQsRUFBdUI7QUFDMUI7QUFDSUYsY0FBTUYsTUFBTVE7QUFEaEIsT0FFT0osT0FGUDtBQUlIOztBQUVNLFNBQVNmLFVBQVQsQ0FBb0JlLE9BQXBCLEVBQTZCO0FBQ2hDO0FBQ0lGLGNBQU1GLE1BQU1TO0FBRGhCLE9BRU9MLE9BRlA7QUFJSDs7QUFFTSxTQUFTZCxhQUFULENBQXVCYyxPQUF2QixFQUFnQztBQUNuQztBQUNJRixjQUFNRixNQUFNVTtBQURoQixPQUVPTixPQUZQO0FBSUg7O0FBRU0sU0FBU2IsY0FBVCxDQUF3QmEsT0FBeEIsRUFBaUM7QUFDcEM7QUFDSUYsY0FBTUYsTUFBTVc7QUFEaEIsT0FFT1AsT0FGUDtBQUlIOztBQUVNLFNBQVNaLE9BQVQsQ0FBaUJZLE9BQWpCLEVBQTBCO0FBQzdCO0FBQ0lGLGNBQU1GLE1BQU1ZO0FBRGhCLE9BRU9SLE9BRlA7QUFJSDs7QUFFTSxTQUFTWCxXQUFULENBQXFCVyxPQUFyQixFQUE4QjtBQUNqQztBQUNJRixjQUFNRixNQUFNYTtBQURoQixPQUVPVCxPQUZQO0FBSUg7O0FBRU0sU0FBU1YsZ0JBQVQsQ0FBMEJvQixJQUExQixFQUFnQ0MsS0FBaEMsRUFBdUM7QUFDMUMsV0FBTztBQUNIYixjQUFNRixNQUFNZ0Isa0JBRFQ7QUFFSEQsZUFBT0EsS0FGSjtBQUdIRCxjQUFNQTtBQUhILEtBQVA7QUFLSDs7QUFFTSxTQUFTbkIsYUFBVCxHQUF5QjtBQUM1QixXQUFPO0FBQ0hPLGNBQU1GLE1BQU1pQjtBQURULEtBQVA7QUFHSDs7QUFFTSxTQUFTckIsZ0JBQVQsQ0FBMEJzQixFQUExQixFQUE4QkMsTUFBOUIsRUFBc0M7QUFDekMsV0FBTztBQUNIakIsY0FBTUYsTUFBTW9CLGtCQURUO0FBRUhGLGNBRkc7QUFHSEMsZ0JBQU9BO0FBSEosS0FBUDtBQUtIOztBQUVNLFNBQVN0QixnQkFBVCxDQUEwQnFCLEVBQTFCLEVBQThCO0FBQ2pDLFdBQU87QUFDSGhCLGNBQU1GLE1BQU1xQixrQkFEVDtBQUVISDtBQUZHLEtBQVA7QUFJSDs7QUFFTSxTQUFTcEIsaUJBQVQsQ0FBMkJ3QixLQUEzQixFQUFrQztBQUNyQyxXQUFPO0FBQ0hwQixjQUFNRixNQUFNdUIsbUJBRFQ7QUFFSEMsc0JBQWNGO0FBRlgsS0FBUDtBQUlIOztBQUVNLFNBQVN2QixnQkFBVCxDQUEwQm1CLEVBQTFCLEVBQThCO0FBQ2pDLFdBQU87QUFDSGhCLGNBQU1GLE1BQU15QixpQkFEVDtBQUVIUDtBQUZHLEtBQVA7QUFJSCIsImZpbGUiOiI2OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZmlsdGVyVGFibGUoZmlsdGVyKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuRklMVEVSLFxuICAgICAgICBmaWx0ZXJcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkTWVzc2FnZShtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuQUREX01FU1NBR0UsXG4gICAgICAgIC4uLm1lc3NhZ2VcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkSW5wdXRIaXN0b3J5KG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5BRERfSU5QVVRfSElTVE9SWSxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSW5wdXRIaXN0b3J5KG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5NT1ZFX0lOUFVUX0hJU1RPUlksXG4gICAgICAgIC4uLm1lc3NhZ2VcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGludChtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuSElOVCxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVGdW5jKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5VUERBVEVfRlVOQyxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVSZXN1bHRzKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5VUERBVEVfUkVTVUxUUyxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVEb2NFdmVudChtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuVVBEQVRFX0RPQ1MsXG4gICAgICAgIC4uLm1lc3NhZ2VcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0RG9jcyhtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuU0VUX0RPQ1MsXG4gICAgICAgIC4uLm1lc3NhZ2VcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0Q29kZUVkaXQobWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLlNFVF9DT0RFX0VESVQsXG4gICAgICAgIC4uLm1lc3NhZ2VcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29kZUVkaXRvcihuYW1lLCB2YWx1ZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLlVQREFURV9DT0RFX0VESVRPUixcbiAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICBuYW1lOiBuYW1lXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZENvbW1hbmRBcmcoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuQUREX0NPTU1BTkRfQVJHLFxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVDb21tYW5kQXJnKGlkLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5VUERBVEVfQ09NTUFORF9BUkcsXG4gICAgICAgIGlkLFxuICAgICAgICB2YWx1ZXM6dmFsdWVzXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUNvbW1hbmRBcmcoaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5ERUxFVEVfQ09NTUFORF9BUkcsXG4gICAgICAgIGlkLFxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdG9yZUN1cnJlbnRJbnB1dChpbnB1dCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLlNUT1JFX0NVUlJFTlRfSU5QVVQsXG4gICAgICAgIGN1cnJlbnRJbnB1dDogaW5wdXRcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGlkZUNvbnZlcnNhdGlvbihpZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLkhJREVfQ09OVkVSU0FUSU9OLFxuICAgICAgICBpZFxuICAgIH07XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvYWN0aW9ucy9pbmRleC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 274:
/***/ (function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar UPDATE_PREDICTIONS = exports.UPDATE_PREDICTIONS = 'UPDATE_PREDICTIONS';\nvar ADD_INPUT_HISTORY = exports.ADD_INPUT_HISTORY = 'ADD_INPUT_HISTORY';\nvar STORE_CURRENT_INPUT = exports.STORE_CURRENT_INPUT = 'STORE_CURRENT_INPUT';\nvar MOVE_INPUT_HISTORY = exports.MOVE_INPUT_HISTORY = 'MOVE_INPUT_HISTORY';\nvar ADD_MESSAGE = exports.ADD_MESSAGE = 'ADD_MESSAGE';\nvar ADD_SERVER_MESSAGE = exports.ADD_SERVER_MESSAGE = 'ADD_SERVER_MESSAGE';\nvar UPDATE_VARIABLES = exports.UPDATE_VARIABLES = 'UPDATE_VARIABLES';\nvar UPDATE_HISTORY = exports.UPDATE_HISTORY = 'UPDATE_HISTORY'; // convo history\nvar HIDE_CONVERSATION = exports.HIDE_CONVERSATION = 'HIDE_CONVERSATION';\nvar UPDATE_DOCS = exports.UPDATE_DOCS = 'UPDATE_DOCS';\nvar UPDATE_FUNC = exports.UPDATE_FUNC = 'UPDATE_FUNC';\nvar UPDATE_RESULTS = exports.UPDATE_RESULTS = 'UPDATE_RESULTS';\nvar SET_DOCS = exports.SET_DOCS = 'SET_DOCS';\nvar SET_CODE_EDIT = exports.SET_CODE_EDIT = 'SET_CODE_EDIT';\nvar UPDATE_CODE_EDITOR = exports.UPDATE_CODE_EDITOR = 'UPDATE_CODE_EDITOR';\nvar ADD_COMMAND_ARG = exports.ADD_COMMAND_ARG = 'ADD_COMMAND_ARG';\nvar UPDATE_COMMAND_ARG = exports.UPDATE_COMMAND_ARG = 'UPDATE_COMMAND_ARG';\nvar DELETE_COMMAND_ARG = exports.DELETE_COMMAND_ARG = 'DELETE_COMMAND_ARG';//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYWN0aW9ucy90eXBlcy5qcz81ODQzIl0sIm5hbWVzIjpbIlVQREFURV9QUkVESUNUSU9OUyIsIkFERF9JTlBVVF9ISVNUT1JZIiwiU1RPUkVfQ1VSUkVOVF9JTlBVVCIsIk1PVkVfSU5QVVRfSElTVE9SWSIsIkFERF9NRVNTQUdFIiwiQUREX1NFUlZFUl9NRVNTQUdFIiwiVVBEQVRFX1ZBUklBQkxFUyIsIlVQREFURV9ISVNUT1JZIiwiSElERV9DT05WRVJTQVRJT04iLCJVUERBVEVfRE9DUyIsIlVQREFURV9GVU5DIiwiVVBEQVRFX1JFU1VMVFMiLCJTRVRfRE9DUyIsIlNFVF9DT0RFX0VESVQiLCJVUERBVEVfQ09ERV9FRElUT1IiLCJBRERfQ09NTUFORF9BUkciLCJVUERBVEVfQ09NTUFORF9BUkciLCJERUxFVEVfQ09NTUFORF9BUkciXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBTUEsa0RBQXFCLG9CQUEzQjtBQUNBLElBQU1DLGdEQUFvQixtQkFBMUI7QUFDQSxJQUFNQyxvREFBc0IscUJBQTVCO0FBQ0EsSUFBTUMsa0RBQXFCLG9CQUEzQjtBQUNBLElBQU1DLG9DQUFjLGFBQXBCO0FBQ0EsSUFBTUMsa0RBQXFCLG9CQUEzQjtBQUNBLElBQU1DLDhDQUFtQixrQkFBekI7QUFDQSxJQUFNQywwQ0FBaUIsZ0JBQXZCLEMsQ0FBeUM7QUFDekMsSUFBTUMsZ0RBQW9CLG1CQUExQjtBQUNBLElBQU1DLG9DQUFjLGFBQXBCO0FBQ0EsSUFBTUMsb0NBQWMsYUFBcEI7QUFDQSxJQUFNQywwQ0FBaUIsZ0JBQXZCO0FBQ0EsSUFBTUMsOEJBQVcsVUFBakI7QUFDQSxJQUFNQyx3Q0FBZ0IsZUFBdEI7QUFDQSxJQUFNQyxrREFBcUIsb0JBQTNCO0FBQ0EsSUFBTUMsNENBQWtCLGlCQUF4QjtBQUNBLElBQU1DLGtEQUFxQixvQkFBM0I7QUFDQSxJQUFNQyxrREFBcUIsb0JBQTNCIiwiZmlsZSI6IjI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBVUERBVEVfUFJFRElDVElPTlMgPSAnVVBEQVRFX1BSRURJQ1RJT05TJztcbmV4cG9ydCBjb25zdCBBRERfSU5QVVRfSElTVE9SWSA9ICdBRERfSU5QVVRfSElTVE9SWSc7XG5leHBvcnQgY29uc3QgU1RPUkVfQ1VSUkVOVF9JTlBVVCA9ICdTVE9SRV9DVVJSRU5UX0lOUFVUJztcbmV4cG9ydCBjb25zdCBNT1ZFX0lOUFVUX0hJU1RPUlkgPSAnTU9WRV9JTlBVVF9ISVNUT1JZJztcbmV4cG9ydCBjb25zdCBBRERfTUVTU0FHRSA9ICdBRERfTUVTU0FHRSc7XG5leHBvcnQgY29uc3QgQUREX1NFUlZFUl9NRVNTQUdFID0gJ0FERF9TRVJWRVJfTUVTU0FHRSc7XG5leHBvcnQgY29uc3QgVVBEQVRFX1ZBUklBQkxFUyA9ICdVUERBVEVfVkFSSUFCTEVTJztcbmV4cG9ydCBjb25zdCBVUERBVEVfSElTVE9SWSA9ICdVUERBVEVfSElTVE9SWSc7IC8vIGNvbnZvIGhpc3RvcnlcbmV4cG9ydCBjb25zdCBISURFX0NPTlZFUlNBVElPTiA9ICdISURFX0NPTlZFUlNBVElPTic7XG5leHBvcnQgY29uc3QgVVBEQVRFX0RPQ1MgPSAnVVBEQVRFX0RPQ1MnO1xuZXhwb3J0IGNvbnN0IFVQREFURV9GVU5DID0gJ1VQREFURV9GVU5DJztcbmV4cG9ydCBjb25zdCBVUERBVEVfUkVTVUxUUyA9ICdVUERBVEVfUkVTVUxUUyc7XG5leHBvcnQgY29uc3QgU0VUX0RPQ1MgPSAnU0VUX0RPQ1MnO1xuZXhwb3J0IGNvbnN0IFNFVF9DT0RFX0VESVQgPSAnU0VUX0NPREVfRURJVCc7XG5leHBvcnQgY29uc3QgVVBEQVRFX0NPREVfRURJVE9SID0gJ1VQREFURV9DT0RFX0VESVRPUic7XG5leHBvcnQgY29uc3QgQUREX0NPTU1BTkRfQVJHID0gJ0FERF9DT01NQU5EX0FSRyc7XG5leHBvcnQgY29uc3QgVVBEQVRFX0NPTU1BTkRfQVJHID0gJ1VQREFURV9DT01NQU5EX0FSRyc7XG5leHBvcnQgY29uc3QgREVMRVRFX0NPTU1BTkRfQVJHID0gJ0RFTEVURV9DT01NQU5EX0FSRyc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvYWN0aW9ucy90eXBlcy5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),

/***/ 455:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _reactRouterRedux = __webpack_require__(394);\n\nvar _redux = __webpack_require__(267);\n\nvar _types = __webpack_require__(274);\n\nvar types = _interopRequireWildcard(_types);\n\nvar _lodash = __webpack_require__(160);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar valueOrNull = function valueOrNull(value) {\n    if (value !== undefined) {\n        return value;\n    }\n    return null;\n};\n\nvar appendMessages = function appendMessages(oldMessages, action) {\n    // text, origin = 'user', type = null, arg = null) => {\n    var newMessages = [];\n    var currentMax = 0;\n    if (oldMessages.length > 0) {\n        console.log('map', _.map(oldMessages, function (m) {\n            return m.id;\n        }));\n        currentMax = _.max(_.map(oldMessages, function (m) {\n            return m.id;\n        }));\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = action.text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var m = _step.value;\n\n            currentMax++;\n            newMessages.push({ 'origin': action.origin, 'text': m, 'id': currentMax,\n                'state': valueOrNull(action.state), 'arg': valueOrNull(action.arg) });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return oldMessages.concat(newMessages);\n};\n\nvar appendMessagesConvo = function appendMessagesConvo(convo, action) {\n    var messages = convo.messages;\n\n    return _extends({}, convo, { messages: appendMessages(messages, action), args: action.arg_map });\n};\n\nvar conversation = function conversation() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'history': [], 'currentConvo': { 'messages': [], 'title': null, 'hidden': false, 'id': 0, 'args': {} }, 'state': 'START' };\n    var action = arguments[1];\n    var history = state.history,\n        currentConvo = state.currentConvo;\n\n    var newConvo = void 0;\n    switch (action.type) {\n        case types.UPDATE_HISTORY:\n            console.log(action.conversation.currentConvo);\n            return { history: action.conversation.history, currentConvo: action.conversation.currentConvo, 'state': state.state };\n        case types.ADD_MESSAGE:\n            return { history: history, currentConvo: appendMessagesConvo(currentConvo, action), 'state': state.state };\n        case types.ADD_SERVER_MESSAGE:\n            if (action.text.length === 0) {\n                return state;\n            }\n            newConvo = appendMessagesConvo(currentConvo, action);\n            if (action.state === 'START') {\n                // hardcoding some logic here for syncing history with server on START\n                // this allows some commands to overwrite history immediately\n                var theId = action.history.length;\n                newConvo = _extends({}, newConvo, { title: action.label, id: theId });\n                return { history: action.history.concat([newConvo]), 'currentConvo': { 'messages': [], 'title': null, 'hidden': false, 'id': newConvo.id + 1, 'args': {} }, state: 'START' };\n            }\n            return { history: history, currentConvo: newConvo, state: action.state };\n        case types.HIDE_CONVERSATION:\n            var newHistory = _.map(history, function (conv) {\n                var out = _extends({}, conv);\n                if (conv.id === action.id) {\n                    out.hidden = !out.hidden;\n                }\n                return out;\n            });\n            newConvo = _extends({}, currentConvo);\n            if (newConvo.id === action.id) {\n                newConvo.hidden = !newConvo.hidden;\n            }\n            return { history: newHistory, currentConvo: newConvo, state: state.state };\n        default:\n            return state;\n    }\n};\n\nvar variables = function variables() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_VARIABLES:\n            return action.variables;\n        default:\n            return state;\n    }\n};\n\nvar predictions = function predictions() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_PREDICTIONS:\n            return action.predictions;\n        default:\n            return state;\n    }\n};\n\nvar docs = function docs() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { title: '', examples: [], description: [], source: '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_DOCS:\n            return action.doc;\n        default:\n            return state;\n    }\n};\n\nvar functionSearch = function functionSearch() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { search: '', results: [] };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_FUNC:\n            return _extends({}, state, { search: action.search });\n        case types.UPDATE_RESULTS:\n            return _extends({}, state, { results: action.results });\n        default:\n            return state;\n    }\n};\n\nvar currentInput = function currentInput() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'input': '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.STORE_CURRENT_INPUT:\n            return { 'input': action.currentInput };\n        default:\n            return state;\n    }\n};\n\nvar minimizeState = function minimizeState() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'docs': true, 'code_edit': true };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.SET_DOCS:\n            return _extends({}, state, { 'docs': action.docs });\n        case types.SET_CODE_EDIT:\n            return _extends({}, state, { 'code_edit': action.code_edit });\n        default:\n            return state;\n    }\n};\n\nvar commandEditPane = function commandEditPane() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { name: '', title: '', args: [], command: '', explanation: '', testInput: '', preview: '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_CODE_EDITOR:\n            var new_state = {};\n            new_state[action.name] = action.value;\n            return _extends({}, state, new_state);\n        case types.ADD_COMMAND_ARG:\n            return _extends({}, state, { args: state.args.concat([{ 'name': '', 'type': '', 'string': '' }]) });\n        case types.UPDATE_COMMAND_ARG:\n            var newArgs = state.args.concat([]);\n            newArgs[action.id] = action.values;\n            return _extends({}, state, { args: newArgs });\n        default:\n            return state;\n    }\n};\n\nvar inputHistory = function inputHistory() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'history': [], 'currId': null, 'showHistory': false };\n    var action = arguments[1];\n\n    var newId = void 0;\n    switch (action.type) {\n        case types.ADD_INPUT_HISTORY:\n            newId = state.currId;\n            if (state.history.length === 0 && newId === null) {\n                newId = 0;\n            }\n            return _extends({}, state, { 'history': [].concat(_toConsumableArray(state.history), [action.message]), 'currId': newId });\n        case types.MOVE_INPUT_HISTORY:\n            if (state.history.length === 0) {\n                return state;\n            }\n            newId = state.currId || 0;\n            if (action.direction === 'up') {\n                if (newId < state.history.length - 1) {\n                    newId += 1;\n                }\n            } else {\n                if (newId >= 1) {\n                    newId -= 1;\n                }\n            }\n            return _extends({}, state, { 'currId': newId });\n        default:\n            return state;\n    }\n};\n\nvar rootReducer = (0, _redux.combineReducers)({\n    conversation: conversation,\n    variables: variables,\n    predictions: predictions,\n    inputHistory: inputHistory,\n    currentInput: currentInput,\n    docs: docs,\n    functionSearch: functionSearch,\n    minimizeState: minimizeState,\n    commandEditPane: commandEditPane,\n    routing: _reactRouterRedux.routerReducer\n});\n\nexports.default = rootReducer;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 1316:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(31);\n\nvar _index = __webpack_require__(69);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar arg_name = void 0,\n    arg_type = void 0,\n    arg_string = void 0;\n\nvar onChangeInput = function onChangeInput(dispatch, id) {\n  console.log(\"change \" + id);\n  var new_values = {\n    arg_name: arg_name.value,\n    arg_type: arg_type.value,\n    art_string: arg_string.value\n  };\n  dispatch((0, _index.updateCommandArg)(id, new_values));\n};\n\nvar onClickDelete = function onClickDelete(dispatch, id) {\n  console.log(\"delete \" + id);\n  dispatch((0, _index.deleteCommandArg)(id));\n};\n\nvar ArgumentAnnotation = function ArgumentAnnotation(_ref) {\n  var dispatch = _ref.dispatch,\n      id = _ref.id;\n  return _react2.default.createElement(\n    'div',\n    { className: 'arg_annotation' },\n    _react2.default.createElement('input', { type: 'text', name: 'arg_name', onChange: function onChange() {\n        return onChangeInput(dispatch, id);\n      }, ref: function ref(node) {\n        arg_name = node;\n      } }),\n    _react2.default.createElement(\n      'select',\n      { name: 'arg_type', onChange: function onChange() {\n          return onChangeInput(dispatch, id);\n        }, ref: function ref(node) {\n          arg_type = node;\n        } },\n      _react2.default.createElement(\n        'option',\n        null,\n        'Int'\n      ),\n      _react2.default.createElement(\n        'option',\n        null,\n        'String'\n      )\n    ),\n    _react2.default.createElement('input', { type: 'text', placeholder: 'Message to request this argument from user...', onChange: function onChange() {\n        return onChangeInput(dispatch, id);\n      }, ref: function ref(node) {\n        arg_string = node;\n      } }),\n    _react2.default.createElement(\n      'button',\n      { onClick: function onClick() {\n          return onClickDelete(dispatch, id);\n        } },\n      'Delete'\n    )\n  );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nArgumentAnnotation = (0, _reactRedux.connect)(mapStateToProps)(ArgumentAnnotation);\n\nexports.default = ArgumentAnnotation;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9Bcmd1bWVudEFubm90YXRpb24uanM/MzM3NCJdLCJuYW1lcyI6WyJhcmdfbmFtZSIsImFyZ190eXBlIiwiYXJnX3N0cmluZyIsIm9uQ2hhbmdlSW5wdXQiLCJkaXNwYXRjaCIsImlkIiwiY29uc29sZSIsImxvZyIsIm5ld192YWx1ZXMiLCJ2YWx1ZSIsImFydF9zdHJpbmciLCJvbkNsaWNrRGVsZXRlIiwiQXJndW1lbnRBbm5vdGF0aW9uIiwibm9kZSIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7O0FBR0EsSUFBSUEsaUJBQUo7QUFBQSxJQUFjQyxpQkFBZDtBQUFBLElBQXdCQyxtQkFBeEI7O0FBRUEsSUFBTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDQyxRQUFELEVBQVdDLEVBQVgsRUFBa0I7QUFDdENDLFVBQVFDLEdBQVIsQ0FBWSxZQUFVRixFQUF0QjtBQUNBLE1BQU1HLGFBQWE7QUFDakJSLGNBQVVBLFNBQVNTLEtBREY7QUFFakJSLGNBQVVBLFNBQVNRLEtBRkY7QUFHakJDLGdCQUFZUixXQUFXTztBQUhOLEdBQW5CO0FBS0FMLFdBQVMsNkJBQWlCQyxFQUFqQixFQUFxQkcsVUFBckIsQ0FBVDtBQUNELENBUkQ7O0FBVUEsSUFBTUcsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDUCxRQUFELEVBQVdDLEVBQVgsRUFBa0I7QUFDdENDLFVBQVFDLEdBQVIsQ0FBWSxZQUFVRixFQUF0QjtBQUNBRCxXQUFTLDZCQUFpQkMsRUFBakIsQ0FBVDtBQUNELENBSEQ7O0FBS0EsSUFBSU8scUJBQXFCO0FBQUEsTUFBR1IsUUFBSCxRQUFHQSxRQUFIO0FBQUEsTUFBYUMsRUFBYixRQUFhQSxFQUFiO0FBQUEsU0FDckI7QUFBQTtBQUFBLE1BQUssV0FBVSxnQkFBZjtBQUNJLDZDQUFPLE1BQUssTUFBWixFQUFtQixNQUFLLFVBQXhCLEVBQW1DLFVBQVU7QUFBQSxlQUFNRixjQUFjQyxRQUFkLEVBQXdCQyxFQUF4QixDQUFOO0FBQUEsT0FBN0MsRUFBZ0YsS0FBSyxtQkFBUTtBQUFDTCxtQkFBV2EsSUFBWDtBQUFpQixPQUEvRyxHQURKO0FBRUk7QUFBQTtBQUFBLFFBQVEsTUFBSyxVQUFiLEVBQXdCLFVBQVU7QUFBQSxpQkFBTVYsY0FBY0MsUUFBZCxFQUF3QkMsRUFBeEIsQ0FBTjtBQUFBLFNBQWxDLEVBQXFFLEtBQUssbUJBQVE7QUFBQ0oscUJBQVdZLElBQVg7QUFBaUIsU0FBcEc7QUFDRTtBQUFBO0FBQUE7QUFBQTtBQUFBLE9BREY7QUFFRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRkYsS0FGSjtBQU1JLDZDQUFPLE1BQUssTUFBWixFQUFtQixhQUFZLCtDQUEvQixFQUErRSxVQUFVO0FBQUEsZUFBTVYsY0FBY0MsUUFBZCxFQUF3QkMsRUFBeEIsQ0FBTjtBQUFBLE9BQXpGLEVBQTRILEtBQUssbUJBQVE7QUFBQ0gscUJBQWFXLElBQWI7QUFBbUIsT0FBN0osR0FOSjtBQU9JO0FBQUE7QUFBQSxRQUFRLFNBQVM7QUFBQSxpQkFBTUYsY0FBY1AsUUFBZCxFQUF3QkMsRUFBeEIsQ0FBTjtBQUFBLFNBQWpCO0FBQUE7QUFBQTtBQVBKLEdBRHFCO0FBQUEsQ0FBekI7O0FBV0EsSUFBTVMsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxLQUFEO0FBQUEsU0FBWSxFQUFaO0FBQUEsQ0FBeEI7O0FBRUFILHFCQUFxQix5QkFBUUUsZUFBUixFQUF5QkYsa0JBQXpCLENBQXJCOztrQkFFZUEsa0IiLCJmaWxlIjoiMTMxNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgdXBkYXRlQ29tbWFuZEFyZywgZGVsZXRlQ29tbWFuZEFyZyB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuXG5cbmxldCBhcmdfbmFtZSwgYXJnX3R5cGUsIGFyZ19zdHJpbmc7XG5cbmNvbnN0IG9uQ2hhbmdlSW5wdXQgPSAoZGlzcGF0Y2gsIGlkKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiY2hhbmdlIFwiK2lkKTtcbiAgY29uc3QgbmV3X3ZhbHVlcyA9IHtcbiAgICBhcmdfbmFtZTogYXJnX25hbWUudmFsdWUsXG4gICAgYXJnX3R5cGU6IGFyZ190eXBlLnZhbHVlLFxuICAgIGFydF9zdHJpbmc6IGFyZ19zdHJpbmcudmFsdWVcbiAgfTtcbiAgZGlzcGF0Y2godXBkYXRlQ29tbWFuZEFyZyhpZCwgbmV3X3ZhbHVlcykpO1xufTtcblxuY29uc3Qgb25DbGlja0RlbGV0ZSA9IChkaXNwYXRjaCwgaWQpID0+IHtcbiAgY29uc29sZS5sb2coXCJkZWxldGUgXCIraWQpO1xuICBkaXNwYXRjaChkZWxldGVDb21tYW5kQXJnKGlkKSk7XG59O1xuXG5sZXQgQXJndW1lbnRBbm5vdGF0aW9uID0gKHsgZGlzcGF0Y2gsIGlkIH0pID0+XG4gICAgPGRpdiBjbGFzc05hbWU9XCJhcmdfYW5ub3RhdGlvblwiPlxuICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiYXJnX25hbWVcIiBvbkNoYW5nZT17KCkgPT4gb25DaGFuZ2VJbnB1dChkaXNwYXRjaCwgaWQpfSByZWY9e25vZGUgPT4ge2FyZ19uYW1lID0gbm9kZTt9fSAvPlxuICAgICAgICA8c2VsZWN0IG5hbWU9XCJhcmdfdHlwZVwiIG9uQ2hhbmdlPXsoKSA9PiBvbkNoYW5nZUlucHV0KGRpc3BhdGNoLCBpZCl9IHJlZj17bm9kZSA9PiB7YXJnX3R5cGUgPSBub2RlO319PlxuICAgICAgICAgIDxvcHRpb24+SW50PC9vcHRpb24+XG4gICAgICAgICAgPG9wdGlvbj5TdHJpbmc8L29wdGlvbj5cbiAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiTWVzc2FnZSB0byByZXF1ZXN0IHRoaXMgYXJndW1lbnQgZnJvbSB1c2VyLi4uXCIgb25DaGFuZ2U9eygpID0+IG9uQ2hhbmdlSW5wdXQoZGlzcGF0Y2gsIGlkKX0gcmVmPXtub2RlID0+IHthcmdfc3RyaW5nID0gbm9kZTt9fS8+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gb25DbGlja0RlbGV0ZShkaXNwYXRjaCwgaWQpfT5EZWxldGU8L2J1dHRvbj5cbiAgICA8L2Rpdj47XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHt9KTtcblxuQXJndW1lbnRBbm5vdGF0aW9uID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKEFyZ3VtZW50QW5ub3RhdGlvbik7XG5cbmV4cG9ydCBkZWZhdWx0IEFyZ3VtZW50QW5ub3RhdGlvbjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9jb21wb25lbnRzL0FyZ3VtZW50QW5ub3RhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})