webpackHotUpdate(0,{

/***/ 130:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.input = exports.InputBox = undefined;\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _index = __webpack_require__(43);\n\nvar _python = __webpack_require__(61);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// dom reference element for main user input box\nvar input = void 0;\n\n// helper to check whether history id (tracker in list) is not null (why does this exist??)\nvar doesHistoryExist = function doesHistoryExist(inputHistory) {\n    return inputHistory.currId !== null;\n};\n// get currently selected history element\nvar getCurrentHistory = function getCurrentHistory(inputHistory) {\n    return inputHistory.history.slice()[inputHistory.currId];\n};\n\n// key binder to grab special keystrokes in main input field\nvar _onKeyDown = function _onKeyDown(dispatch, inputHistory, e, predictions) {\n    var keyCode = e.keyCode || e.which;\n    // tab autocomplete\n    if (keyCode === 9) {\n        // tab\n        if (predictions.length > 0) {\n            var stripText = predictions[0].text.replace(/{/g, '').replace(/}/g, '');\n            input.value = stripText;\n            dispatch((0, _index.storeClassIndex)(predictions[0].class_index));\n            (0, _python.updateHint)(input.value);\n        }\n        e.preventDefault();\n    }\n    if (keyCode === 38) {\n        // up arrow\n        dispatch((0, _index.moveInputHistory)({ 'direction': 'up' }));\n        if (doesHistoryExist(inputHistory)) {\n            input.value = getCurrentHistory(inputHistory);\n        }\n    } else if (keyCode === 40) {\n        // down arrow\n        dispatch((0, _index.moveInputHistory)({ 'direction': 'down' }));\n        if (doesHistoryExist(inputHistory)) {\n            input.value = getCurrentHistory(inputHistory);\n        }\n    }\n};\n\n// store input value, and update hint and docs\nvar onChangeInput = function onChangeInput(dispatch) {\n    dispatch((0, _index.storeCurrentInput)(input.value));\n    (0, _python.updateHint)(input.value);\n    // updateDocs(input.value);\n};\n\n// this component defines main text input\nvar InputBox = function InputBox(_ref) {\n    var dispatch = _ref.dispatch,\n        inputHistory = _ref.inputHistory,\n        predictions = _ref.predictions;\n    return _react2.default.createElement(\n        'div',\n        { className: 'input_box' },\n        _react2.default.createElement(\n            'form',\n            { onSubmit: function onSubmit(e) {\n                    e.preventDefault();\n                    dispatch((0, _index.addMessage)({ 'origin': 'user', 'text': [input.value], 'class_index': null }));\n                    dispatch((0, _index.addInputHistory)({ 'message': input.value }));\n                    dispatch((0, _index.storeCurrentInput)(''));\n                    input.value = '';\n                } },\n            _react2.default.createElement('input', { onChange: function onChange() {\n                    return onChangeInput(dispatch);\n                }, onKeyDown: function onKeyDown(e) {\n                    return _onKeyDown(dispatch, inputHistory, e, predictions);\n                }, type: 'text', placeholder: 'your message here', ref: function ref(node) {\n                    exports.input = input = node;\n                } })\n        )\n    );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        inputHistory: state.inputHistory,\n        predictions: state.predictions\n    };\n};\n\nexports.InputBox = InputBox = (0, _reactRedux.connect)(mapStateToProps)(InputBox);\n\nexports.InputBox = InputBox;\nexports.input = input;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29udGFpbmVycy9JbnB1dEJveC5qcz9jYzUxIl0sIm5hbWVzIjpbIl8iLCJpbnB1dCIsImRvZXNIaXN0b3J5RXhpc3QiLCJpbnB1dEhpc3RvcnkiLCJjdXJySWQiLCJnZXRDdXJyZW50SGlzdG9yeSIsImhpc3RvcnkiLCJzbGljZSIsIm9uS2V5RG93biIsImRpc3BhdGNoIiwiZSIsInByZWRpY3Rpb25zIiwia2V5Q29kZSIsIndoaWNoIiwibGVuZ3RoIiwic3RyaXBUZXh0IiwidGV4dCIsInJlcGxhY2UiLCJ2YWx1ZSIsImNsYXNzX2luZGV4IiwicHJldmVudERlZmF1bHQiLCJvbkNoYW5nZUlucHV0IiwiSW5wdXRCb3giLCJub2RlIiwibWFwU3RhdGVUb1Byb3BzIiwic3RhdGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztJQUFZQSxDOzs7Ozs7QUFFWjtBQUNBLElBQUlDLGNBQUo7O0FBRUE7QUFDQSxJQUFNQyxtQkFBbUIsU0FBbkJBLGdCQUFtQixDQUFDQyxZQUFEO0FBQUEsV0FBa0JBLGFBQWFDLE1BQWIsS0FBd0IsSUFBMUM7QUFBQSxDQUF6QjtBQUNBO0FBQ0EsSUFBTUMsb0JBQW9CLFNBQXBCQSxpQkFBb0IsQ0FBQ0YsWUFBRDtBQUFBLFdBQWtCQSxhQUFhRyxPQUFiLENBQXFCQyxLQUFyQixHQUE2QkosYUFBYUMsTUFBMUMsQ0FBbEI7QUFBQSxDQUExQjs7QUFFQTtBQUNBLElBQU1JLGFBQVksU0FBWkEsVUFBWSxDQUFDQyxRQUFELEVBQVdOLFlBQVgsRUFBeUJPLENBQXpCLEVBQTRCQyxXQUE1QixFQUE0QztBQUMxRCxRQUFNQyxVQUFVRixFQUFFRSxPQUFGLElBQWFGLEVBQUVHLEtBQS9CO0FBQ0E7QUFDQSxRQUFJRCxZQUFZLENBQWhCLEVBQWtCO0FBQUU7QUFDbEIsWUFBR0QsWUFBWUcsTUFBWixHQUFxQixDQUF4QixFQUEwQjtBQUN4QixnQkFBSUMsWUFBWUosWUFBWSxDQUFaLEVBQWVLLElBQWYsQ0FBb0JDLE9BQXBCLENBQTRCLElBQTVCLEVBQWtDLEVBQWxDLEVBQXNDQSxPQUF0QyxDQUE4QyxJQUE5QyxFQUFvRCxFQUFwRCxDQUFoQjtBQUNBaEIsa0JBQU1pQixLQUFOLEdBQWNILFNBQWQ7QUFDQU4scUJBQVMsNEJBQWdCRSxZQUFZLENBQVosRUFBZVEsV0FBL0IsQ0FBVDtBQUNBLG9DQUFXbEIsTUFBTWlCLEtBQWpCO0FBQ0Q7QUFDRFIsVUFBRVUsY0FBRjtBQUNEO0FBQ0QsUUFBSVIsWUFBWSxFQUFoQixFQUFvQjtBQUFFO0FBQ2xCSCxpQkFBUyw2QkFBaUIsRUFBQyxhQUFhLElBQWQsRUFBakIsQ0FBVDtBQUNBLFlBQUlQLGlCQUFpQkMsWUFBakIsQ0FBSixFQUFvQztBQUNoQ0Ysa0JBQU1pQixLQUFOLEdBQWNiLGtCQUFrQkYsWUFBbEIsQ0FBZDtBQUNIO0FBQ0osS0FMRCxNQUtPLElBQUdTLFlBQVksRUFBZixFQUFtQjtBQUFFO0FBQ3hCSCxpQkFBUyw2QkFBaUIsRUFBQyxhQUFhLE1BQWQsRUFBakIsQ0FBVDtBQUNBLFlBQUlQLGlCQUFpQkMsWUFBakIsQ0FBSixFQUFvQztBQUNoQ0Ysa0JBQU1pQixLQUFOLEdBQWNiLGtCQUFrQkYsWUFBbEIsQ0FBZDtBQUNIO0FBQ0o7QUFDSixDQXZCRDs7QUF5QkE7QUFDQSxJQUFNa0IsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDWixRQUFELEVBQWM7QUFDaENBLGFBQVMsOEJBQWtCUixNQUFNaUIsS0FBeEIsQ0FBVDtBQUNBLDRCQUFXakIsTUFBTWlCLEtBQWpCO0FBQ0E7QUFDSCxDQUpEOztBQU1BO0FBQ0EsSUFBSUksV0FBVztBQUFBLFFBQUdiLFFBQUgsUUFBR0EsUUFBSDtBQUFBLFFBQWFOLFlBQWIsUUFBYUEsWUFBYjtBQUFBLFFBQTJCUSxXQUEzQixRQUEyQkEsV0FBM0I7QUFBQSxXQUNYO0FBQUE7QUFBQSxVQUFLLFdBQVUsV0FBZjtBQUNJO0FBQUE7QUFBQSxjQUFNLFVBQVUscUJBQUs7QUFDakJELHNCQUFFVSxjQUFGO0FBQ0FYLDZCQUFTLHVCQUFXLEVBQUMsVUFBVSxNQUFYLEVBQW1CLFFBQVEsQ0FBQ1IsTUFBTWlCLEtBQVAsQ0FBM0IsRUFBMEMsZUFBZSxJQUF6RCxFQUFYLENBQVQ7QUFDQVQsNkJBQVMsNEJBQWdCLEVBQUMsV0FBV1IsTUFBTWlCLEtBQWxCLEVBQWhCLENBQVQ7QUFDQVQsNkJBQVMsOEJBQWtCLEVBQWxCLENBQVQ7QUFDQVIsMEJBQU1pQixLQUFOLEdBQWMsRUFBZDtBQUNILGlCQU5EO0FBT0kscURBQU8sVUFBVTtBQUFBLDJCQUFNRyxjQUFjWixRQUFkLENBQU47QUFBQSxpQkFBakIsRUFBZ0QsV0FBVyxtQkFBQ0MsQ0FBRDtBQUFBLDJCQUFPRixXQUFVQyxRQUFWLEVBQW9CTixZQUFwQixFQUFrQ08sQ0FBbEMsRUFBcUNDLFdBQXJDLENBQVA7QUFBQSxpQkFBM0QsRUFBcUgsTUFBSyxNQUExSCxFQUFpSSxhQUFZLG1CQUE3SSxFQUFpSyxLQUFLLG1CQUFRO0FBQUMsNEJBV3pLVixLQVh5SyxXQUFRc0IsSUFBUjtBQUFjLGlCQUE3TDtBQVBKO0FBREosS0FEVztBQUFBLENBQWY7O0FBYUEsSUFBTUMsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxLQUFEO0FBQUEsV0FBWTtBQUNoQ3RCLHNCQUFjc0IsTUFBTXRCLFlBRFk7QUFFaENRLHFCQUFhYyxNQUFNZDtBQUZhLEtBQVo7QUFBQSxDQUF4Qjs7QUFLQSxRQUVRVyxRQUZSLGNBQVcseUJBQVFFLGVBQVIsRUFBeUJGLFFBQXpCLENBQVg7O1FBRVFBLFEsR0FBQUEsUTtRQUFVckIsSyxHQUFBQSxLIiwiZmlsZSI6IjEzMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgYWRkTWVzc2FnZSwgYWRkSW5wdXRIaXN0b3J5LCBtb3ZlSW5wdXRIaXN0b3J5LCBzdG9yZUN1cnJlbnRJbnB1dCwgdXBkYXRlRG9jRXZlbnQsIHNldERvY3MsIHN0b3JlQ2xhc3NJbmRleCB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuaW1wb3J0IHsgdXBkYXRlSGludCwgdXBkYXRlRG9jcyB9IGZyb20gJy4uL2FwaV9jYWxscy9weXRob24uanMnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG4vLyBkb20gcmVmZXJlbmNlIGVsZW1lbnQgZm9yIG1haW4gdXNlciBpbnB1dCBib3hcbmxldCBpbnB1dDtcblxuLy8gaGVscGVyIHRvIGNoZWNrIHdoZXRoZXIgaGlzdG9yeSBpZCAodHJhY2tlciBpbiBsaXN0KSBpcyBub3QgbnVsbCAod2h5IGRvZXMgdGhpcyBleGlzdD8/KVxuY29uc3QgZG9lc0hpc3RvcnlFeGlzdCA9IChpbnB1dEhpc3RvcnkpID0+IGlucHV0SGlzdG9yeS5jdXJySWQgIT09IG51bGw7XG4vLyBnZXQgY3VycmVudGx5IHNlbGVjdGVkIGhpc3RvcnkgZWxlbWVudFxuY29uc3QgZ2V0Q3VycmVudEhpc3RvcnkgPSAoaW5wdXRIaXN0b3J5KSA9PiBpbnB1dEhpc3RvcnkuaGlzdG9yeS5zbGljZSgpW2lucHV0SGlzdG9yeS5jdXJySWRdO1xuXG4vLyBrZXkgYmluZGVyIHRvIGdyYWIgc3BlY2lhbCBrZXlzdHJva2VzIGluIG1haW4gaW5wdXQgZmllbGRcbmNvbnN0IG9uS2V5RG93biA9IChkaXNwYXRjaCwgaW5wdXRIaXN0b3J5LCBlLCBwcmVkaWN0aW9ucykgPT4ge1xuICAgIGNvbnN0IGtleUNvZGUgPSBlLmtleUNvZGUgfHwgZS53aGljaDtcbiAgICAvLyB0YWIgYXV0b2NvbXBsZXRlXG4gICAgaWYgKGtleUNvZGUgPT09IDkpeyAvLyB0YWJcbiAgICAgIGlmKHByZWRpY3Rpb25zLmxlbmd0aCA+IDApe1xuICAgICAgICBsZXQgc3RyaXBUZXh0ID0gcHJlZGljdGlvbnNbMF0udGV4dC5yZXBsYWNlKC97L2csICcnKS5yZXBsYWNlKC99L2csICcnKTtcbiAgICAgICAgaW5wdXQudmFsdWUgPSBzdHJpcFRleHQ7XG4gICAgICAgIGRpc3BhdGNoKHN0b3JlQ2xhc3NJbmRleChwcmVkaWN0aW9uc1swXS5jbGFzc19pbmRleCkpO1xuICAgICAgICB1cGRhdGVIaW50KGlucHV0LnZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gICAgaWYgKGtleUNvZGUgPT09IDM4KSB7IC8vIHVwIGFycm93XG4gICAgICAgIGRpc3BhdGNoKG1vdmVJbnB1dEhpc3RvcnkoeydkaXJlY3Rpb24nOiAndXAnfSkpO1xuICAgICAgICBpZiAoZG9lc0hpc3RvcnlFeGlzdChpbnB1dEhpc3RvcnkpKSB7XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IGdldEN1cnJlbnRIaXN0b3J5KGlucHV0SGlzdG9yeSk7XG4gICAgICAgIH1cbiAgICB9IGVsc2UgaWYoa2V5Q29kZSA9PT0gNDApIHsgLy8gZG93biBhcnJvd1xuICAgICAgICBkaXNwYXRjaChtb3ZlSW5wdXRIaXN0b3J5KHsnZGlyZWN0aW9uJzogJ2Rvd24nfSkpO1xuICAgICAgICBpZiAoZG9lc0hpc3RvcnlFeGlzdChpbnB1dEhpc3RvcnkpKSB7XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9IGdldEN1cnJlbnRIaXN0b3J5KGlucHV0SGlzdG9yeSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4vLyBzdG9yZSBpbnB1dCB2YWx1ZSwgYW5kIHVwZGF0ZSBoaW50IGFuZCBkb2NzXG5jb25zdCBvbkNoYW5nZUlucHV0ID0gKGRpc3BhdGNoKSA9PiB7XG4gICAgZGlzcGF0Y2goc3RvcmVDdXJyZW50SW5wdXQoaW5wdXQudmFsdWUpKTtcbiAgICB1cGRhdGVIaW50KGlucHV0LnZhbHVlKTtcbiAgICAvLyB1cGRhdGVEb2NzKGlucHV0LnZhbHVlKTtcbn07XG5cbi8vIHRoaXMgY29tcG9uZW50IGRlZmluZXMgbWFpbiB0ZXh0IGlucHV0XG5sZXQgSW5wdXRCb3ggPSAoeyBkaXNwYXRjaCwgaW5wdXRIaXN0b3J5LCBwcmVkaWN0aW9ucyB9KSA9PlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaW5wdXRfYm94XCI+XG4gICAgICAgIDxmb3JtIG9uU3VibWl0PXtlID0+IHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGRpc3BhdGNoKGFkZE1lc3NhZ2UoeydvcmlnaW4nOiAndXNlcicsICd0ZXh0JzogW2lucHV0LnZhbHVlXSwgJ2NsYXNzX2luZGV4JzogbnVsbCB9KSk7XG4gICAgICAgICAgICBkaXNwYXRjaChhZGRJbnB1dEhpc3RvcnkoeydtZXNzYWdlJzogaW5wdXQudmFsdWV9KSk7XG4gICAgICAgICAgICBkaXNwYXRjaChzdG9yZUN1cnJlbnRJbnB1dCgnJykpO1xuICAgICAgICAgICAgaW5wdXQudmFsdWUgPSAnJztcbiAgICAgICAgfX0+XG4gICAgICAgICAgICA8aW5wdXQgb25DaGFuZ2U9eygpID0+IG9uQ2hhbmdlSW5wdXQoZGlzcGF0Y2gpfSBvbktleURvd249eyhlKSA9PiBvbktleURvd24oZGlzcGF0Y2gsIGlucHV0SGlzdG9yeSwgZSwgcHJlZGljdGlvbnMpfSB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwieW91ciBtZXNzYWdlIGhlcmVcIiByZWY9e25vZGUgPT4ge2lucHV0ID0gbm9kZTt9fT48L2lucHV0PlxuICAgICAgICA8L2Zvcm0+XG4gICAgPC9kaXY+O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XG4gICAgaW5wdXRIaXN0b3J5OiBzdGF0ZS5pbnB1dEhpc3RvcnksXG4gICAgcHJlZGljdGlvbnM6IHN0YXRlLnByZWRpY3Rpb25zLFxufSk7XG5cbklucHV0Qm94ID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKElucHV0Qm94KTtcblxuZXhwb3J0IHtJbnB1dEJveCwgaW5wdXR9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2NvbnRhaW5lcnMvSW5wdXRCb3guanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ })

})