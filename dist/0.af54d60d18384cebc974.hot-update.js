webpackHotUpdate(0,{

/***/ 501:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setInput = exports.PredictionStrip = undefined;\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputBox = __webpack_require__(130);\n\nvar _python = __webpack_require__(61);\n\nvar _index = __webpack_require__(35);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// set main input text and update hint\nvar setInput = function setInput(dispatch, text, id) {\n    return function () {\n        var stripText = text.replace(/{/g, '').replace(/}/g, '');\n        _InputBox.input.value = stripText;\n        (0, _python.updateHint)(stripText);\n        dispatch((0, _index.storeClassIndex)(id));\n    };\n};\n\nvar reorder = function reorder(currIndex, predictions) {\n    return [].concat(_toConsumableArray(_.filter(predictions, function (p) {\n        return p.id === currIndex;\n    })), _toConsumableArray(_.filter(predictions, function (p) {\n        return p.id !== currIndex;\n    })));\n};\n\n// TODO: should logic that binds to tab-key press be here as well?\n\n// defines component for prediction strip above main input text\nvar PredictionStrip = function PredictionStrip(_ref) {\n    var dispatch = _ref.dispatch,\n        predictions = _ref.predictions,\n        currIndex = _ref.currIndex;\n\n    // TODO: optimize width\n    var charLength = predictions.map(function (p) {\n        return p.text.length;\n    }).reduce(function (x, y) {\n        return x + y;\n    }, 0);\n    return _react2.default.createElement(\n        'div',\n        { className: 'prediction_strip' },\n        _react2.default.createElement(\n            'div',\n            { className: 'predictions', style: { width: charLength * 9 + \"px\" } },\n            reorder(predictions).map(function (obj, i) {\n                return _react2.default.createElement(\n                    'span',\n                    { onClick: setInput(dispatch, obj.text, obj.id), className: \"prediction \" + obj.style },\n                    obj.text\n                );\n            })\n        )\n    );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        predictions: state.predictions,\n        currIndex: state.currentInput.currIndex // for selected prediction\n    };\n};\n\nexports.PredictionStrip = PredictionStrip = (0, _reactRedux.connect)(mapStateToProps)(PredictionStrip);\n\nexports.PredictionStrip = PredictionStrip;\nexports.setInput = setInput;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanM/ZDFhMiJdLCJuYW1lcyI6WyJfIiwic2V0SW5wdXQiLCJkaXNwYXRjaCIsInRleHQiLCJpZCIsInN0cmlwVGV4dCIsInJlcGxhY2UiLCJ2YWx1ZSIsInJlb3JkZXIiLCJjdXJySW5kZXgiLCJwcmVkaWN0aW9ucyIsImZpbHRlciIsInAiLCJQcmVkaWN0aW9uU3RyaXAiLCJjaGFyTGVuZ3RoIiwibWFwIiwibGVuZ3RoIiwicmVkdWNlIiwieCIsInkiLCJ3aWR0aCIsIm9iaiIsImkiLCJzdHlsZSIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIiwiY3VycmVudElucHV0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7SUFBWUEsQzs7Ozs7Ozs7QUFFWjtBQUNBLElBQU1DLFdBQVcsU0FBWEEsUUFBVyxDQUFDQyxRQUFELEVBQVdDLElBQVgsRUFBaUJDLEVBQWpCLEVBQXdCO0FBQ3JDLFdBQU8sWUFBTTtBQUNULFlBQUlDLFlBQVlGLEtBQUtHLE9BQUwsQ0FBYSxJQUFiLEVBQW1CLEVBQW5CLEVBQXVCQSxPQUF2QixDQUErQixJQUEvQixFQUFxQyxFQUFyQyxDQUFoQjtBQUNBLHdCQUFNQyxLQUFOLEdBQWNGLFNBQWQ7QUFDQSxnQ0FBV0EsU0FBWDtBQUNBSCxpQkFBUyw0QkFBZ0JFLEVBQWhCLENBQVQ7QUFDSCxLQUxEO0FBTUgsQ0FQRDs7QUFTQSxJQUFNSSxVQUFVLFNBQVZBLE9BQVUsQ0FBQ0MsU0FBRCxFQUFZQyxXQUFaLEVBQTRCO0FBQzFDLHdDQUFZVixFQUFFVyxNQUFGLENBQVNELFdBQVQsRUFBc0IsVUFBQ0UsQ0FBRDtBQUFBLGVBQU9BLEVBQUVSLEVBQUYsS0FBU0ssU0FBaEI7QUFBQSxLQUF0QixDQUFaLHNCQUFtRVQsRUFBRVcsTUFBRixDQUFTRCxXQUFULEVBQXNCLFVBQUNFLENBQUQ7QUFBQSxlQUFPQSxFQUFFUixFQUFGLEtBQVNLLFNBQWhCO0FBQUEsS0FBdEIsQ0FBbkU7QUFDRCxDQUZEOztBQUlBOztBQUVBO0FBQ0EsSUFBSUksa0JBQWtCLCtCQUF3QztBQUFBLFFBQXRDWCxRQUFzQyxRQUF0Q0EsUUFBc0M7QUFBQSxRQUE1QlEsV0FBNEIsUUFBNUJBLFdBQTRCO0FBQUEsUUFBZkQsU0FBZSxRQUFmQSxTQUFlOztBQUM1RDtBQUNBLFFBQU1LLGFBQWFKLFlBQVlLLEdBQVosQ0FBZ0IsVUFBQ0gsQ0FBRDtBQUFBLGVBQU9BLEVBQUVULElBQUYsQ0FBT2EsTUFBZDtBQUFBLEtBQWhCLEVBQXNDQyxNQUF0QyxDQUE2QyxVQUFDQyxDQUFELEVBQUdDLENBQUg7QUFBQSxlQUFTRCxJQUFJQyxDQUFiO0FBQUEsS0FBN0MsRUFBNkQsQ0FBN0QsQ0FBbkI7QUFDQSxXQUFRO0FBQUE7QUFBQSxVQUFLLFdBQVUsa0JBQWY7QUFDRjtBQUFBO0FBQUEsY0FBSyxXQUFVLGFBQWYsRUFBNkIsT0FBTyxFQUFDQyxPQUFRTixhQUFhLENBQWQsR0FBbUIsSUFBM0IsRUFBcEM7QUFDR04sb0JBQVFFLFdBQVIsRUFBcUJLLEdBQXJCLENBQXlCLFVBQUNNLEdBQUQsRUFBS0MsQ0FBTDtBQUFBLHVCQUFXO0FBQUE7QUFBQSxzQkFBTSxTQUFTckIsU0FBU0MsUUFBVCxFQUFtQm1CLElBQUlsQixJQUF2QixFQUE2QmtCLElBQUlqQixFQUFqQyxDQUFmLEVBQXFELFdBQVcsZ0JBQWdCaUIsSUFBSUUsS0FBcEY7QUFBNkZGLHdCQUFJbEI7QUFBakcsaUJBQVg7QUFBQSxhQUF6QjtBQURIO0FBREUsS0FBUjtBQUtELENBUkQ7O0FBWUEsSUFBTXFCLGtCQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsS0FBRDtBQUFBLFdBQVk7QUFDaENmLHFCQUFhZSxNQUFNZixXQURhO0FBRWhDRCxtQkFBV2dCLE1BQU1DLFlBQU4sQ0FBbUJqQixTQUZFLENBRVE7QUFGUixLQUFaO0FBQUEsQ0FBeEI7O0FBS0EsUUFFUUksZUFGUixxQkFBa0IseUJBQVFXLGVBQVIsRUFBeUJYLGVBQXpCLENBQWxCOztRQUVRQSxlLEdBQUFBLGU7UUFBaUJaLFEsR0FBQUEsUSIsImZpbGUiOiI1MDEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHJvcFR5cGVzIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaW5wdXQgfSBmcm9tICcuLi9jb250YWluZXJzL0lucHV0Qm94JztcbmltcG9ydCB7IHVwZGF0ZUhpbnQgfSBmcm9tICcuLi9hcGlfY2FsbHMvcHl0aG9uLmpzJztcbmltcG9ydCB7IHN0b3JlQ2xhc3NJbmRleCwgY2xlYXJDbGFzc0luZGV4IH0gZnJvbSAnLi4vYWN0aW9ucy9pbmRleC5qcyc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnO1xuXG4vLyBzZXQgbWFpbiBpbnB1dCB0ZXh0IGFuZCB1cGRhdGUgaGludFxuY29uc3Qgc2V0SW5wdXQgPSAoZGlzcGF0Y2gsIHRleHQgLGlkKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgbGV0IHN0cmlwVGV4dCA9IHRleHQucmVwbGFjZSgvey9nLCAnJykucmVwbGFjZSgvfS9nLCAnJyk7XG4gICAgICAgIGlucHV0LnZhbHVlID0gc3RyaXBUZXh0O1xuICAgICAgICB1cGRhdGVIaW50KHN0cmlwVGV4dCk7XG4gICAgICAgIGRpc3BhdGNoKHN0b3JlQ2xhc3NJbmRleChpZCkpO1xuICAgIH07XG59O1xuXG5jb25zdCByZW9yZGVyID0gKGN1cnJJbmRleCwgcHJlZGljdGlvbnMpID0+IHtcbiAgcmV0dXJuIFsuLi4oXy5maWx0ZXIocHJlZGljdGlvbnMsIChwKSA9PiBwLmlkID09PSBjdXJySW5kZXgpKSwgLi4uKF8uZmlsdGVyKHByZWRpY3Rpb25zLCAocCkgPT4gcC5pZCAhPT0gY3VyckluZGV4KSldXG59O1xuXG4vLyBUT0RPOiBzaG91bGQgbG9naWMgdGhhdCBiaW5kcyB0byB0YWIta2V5IHByZXNzIGJlIGhlcmUgYXMgd2VsbD9cblxuLy8gZGVmaW5lcyBjb21wb25lbnQgZm9yIHByZWRpY3Rpb24gc3RyaXAgYWJvdmUgbWFpbiBpbnB1dCB0ZXh0XG5sZXQgUHJlZGljdGlvblN0cmlwID0gKHtkaXNwYXRjaCwgcHJlZGljdGlvbnMsIGN1cnJJbmRleH0pID0+IHtcbiAgLy8gVE9ETzogb3B0aW1pemUgd2lkdGhcbiAgY29uc3QgY2hhckxlbmd0aCA9IHByZWRpY3Rpb25zLm1hcCgocCkgPT4gcC50ZXh0Lmxlbmd0aCkucmVkdWNlKCh4LHkpID0+IHggKyB5LCAwKTtcbiAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rpb25fc3RyaXBcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcmVkaWN0aW9uc1wiIHN0eWxlPXt7d2lkdGg6IChjaGFyTGVuZ3RoICogOSkgKyBcInB4XCJ9fT5cbiAgICAgICAgICB7cmVvcmRlcihwcmVkaWN0aW9ucykubWFwKChvYmosaSkgPT4gPHNwYW4gb25DbGljaz17c2V0SW5wdXQoZGlzcGF0Y2gsIG9iai50ZXh0LCBvYmouaWQpfSBjbGFzc05hbWU9e1wicHJlZGljdGlvbiBcIiArIG9iai5zdHlsZX0+eyBvYmoudGV4dCB9PC9zcGFuPil9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+KTtcbn07XG5cblxuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XG4gICAgcHJlZGljdGlvbnM6IHN0YXRlLnByZWRpY3Rpb25zLFxuICAgIGN1cnJJbmRleDogc3RhdGUuY3VycmVudElucHV0LmN1cnJJbmRleCAvLyBmb3Igc2VsZWN0ZWQgcHJlZGljdGlvblxufSk7XG5cblByZWRpY3Rpb25TdHJpcCA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKShQcmVkaWN0aW9uU3RyaXApO1xuXG5leHBvcnQge1ByZWRpY3Rpb25TdHJpcCwgc2V0SW5wdXR9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2NvbXBvbmVudHMvUHJlZGljdGlvblN0cmlwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

})