webpackHotUpdate(0,{

/***/ 503:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactDataGrid = __webpack_require__(402);\n\nvar _reactDataGrid2 = _interopRequireDefault(_reactDataGrid);\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _types = __webpack_require__(73);\n\nvar proptypes = _interopRequireWildcard(_types);\n\nvar _python = __webpack_require__(61);\n\nvar _InputBox = __webpack_require__(131);\n\nvar _index = __webpack_require__(35);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar selectionContains = function selectionContains(inputField, columnName) {\n  var items = inputField.split(\",\").map(function (x) {\n    return x.replace(/^\\s+|\\s+$/g, '');\n  });\n  var findIndex = items.indexOf(columnName);\n  if (findIndex > -1) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n// this function updates the main conversation input (input) with a column selection\nvar setInput = function setInput(dispatch, active, text) {\n  var onlyOne = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  return function () {\n    // if component is not active, this will do nothing\n    if (active === true) {\n      var stripText = text.replace(/{/g, '').replace(/}/g, '');\n      // if this is a selectOne component, the job is easy\n      if (onlyOne === true) {\n        if (_InputBox.input.value.includes(text)) {\n          _InputBox.input.value = \"\";\n        } else {\n          _InputBox.input.value = text;\n        }\n      }\n      // otherwise, if input already includes text, we are going to remove/deselect it\n      else if (_InputBox.input.value.includes(text)) {\n          var items = _InputBox.input.value.split(\",\").map(function (x) {\n            return x.replace(/^\\s+|\\s+$/g, '');\n          });\n          var findIndex = items.indexOf(text);\n          if (findIndex > -1) {\n            items.splice(findIndex, 1);\n          }\n          _InputBox.input.value = items.join(\", \"); // input.value.replace(RegExp(test+\",|\"test), '');\n        }\n        // otherwise, we are going to append it\n        else {\n            if (_InputBox.input.value !== \"\") _InputBox.input.value = _InputBox.input.value + \", \" + stripText;else _InputBox.input.value = stripText;\n          }\n      dispatch((0, _index.storeCurrentInput)(_InputBox.input.value));\n      (0, _python.updateHint)(_InputBox.input.value);\n    }\n  };\n};\n\n// this component defines tables that have allow users to dynamically select columns\n// TODO: this shares a lot with CollectionMessage, factor out as much as possible. Also, rename\n\nvar TableSelectMessage = function (_Component) {\n  _inherits(TableSelectMessage, _Component);\n\n  function TableSelectMessage() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableSelectMessage);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableSelectMessage.__proto__ || Object.getPrototypeOf(TableSelectMessage)).call.apply(_ref, [this].concat(args))), _this), _this.render = function () {\n      var data = JSON.parse(_this.props.text);\n      _this.testColumns = data[\"column_data\"];\n      _this.colMap = {};\n      for (var i = 0; i < _this.testColumns.length; i++) {\n        _this.colMap[i] = _this.testColumns[i].name;\n      }\n      _this.testRows = data[\"row_data\"].slice(0, 3);\n      var containsText = false;\n      var singleColumn = _this.testColumns.length === 1;\n      console.log(_this.props.currentInput);\n      return _react2.default.createElement(\n        'div',\n        { className: _this.props.origin === 'iris' ? 'message left' : 'message right', style: _this.props.hidden === true ? { display: 'none' } : {} },\n        _react2.default.createElement(\n          'div',\n          { className: 'bubble table' },\n          _react2.default.createElement(\n            'div',\n            { className: 'data_table', style: { width: 50 * (350 + 10 + 1) } },\n            _react2.default.createElement(\n              'div',\n              { className: 'header' },\n              _this.testColumns.map(function (column, i) {\n                var newColStyle = {};\n                if (column.type === \"Text\") {\n                  newColStyle['width'] = 350;\n                  containsText = true;\n                }\n                if (singleColumn || i == 0) {\n                  newColStyle['border-left'] = 'none';\n                };\n                if (i < 50) {\n                  return _react2.default.createElement(\n                    'span',\n                    { className: 'data_column', onClick: setInput(_this.props.dispatch, _this.props.active, column.name, _this.props.onlyOne), style: newColStyle },\n                    column.name\n                  );\n                }\n              })\n            ),\n            _this.testRows.map(function (row, row_num) {\n              if (row_num < 50) {\n                var newRowStyle = {};\n                if (containsText) {\n                  newRowStyle['height'] = '4em';\n                };\n                return _react2.default.createElement(\n                  'div',\n                  { className: 'data_row', style: newRowStyle },\n                  _this.testColumns.map(function (column, i) {\n                    var newColStyle = {};\n                    if (column.type === \"Text\") {\n                      newColStyle['width'] = 350;\n                    }\n                    if (containsText) {\n                      newColStyle['height'] = '4em';\n                    }\n                    if (_this.props.active && selectionContains(_this.props.currentInput, _this.colMap[i])) {\n                      newColStyle['background-color'] = '#eee';\n                    }\n                    if (singleColumn || i == 0) {\n                      newColStyle['border-left'] = 'none';\n                    };\n                    if (i < 50) {\n                      return _react2.default.createElement(\n                        'span',\n                        { className: 'data_column', style: newColStyle },\n                        row[column.name]\n                      );\n                    }\n                  })\n                );\n              }\n            })\n          )\n        )\n      );\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return TableSelectMessage;\n}(_react.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentInput: state.currentInput.input\n  };\n};\n\nTableSelectMessage = (0, _reactRedux.connect)(mapStateToProps)(TableSelectMessage);\n\nexports.default = TableSelectMessage;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})