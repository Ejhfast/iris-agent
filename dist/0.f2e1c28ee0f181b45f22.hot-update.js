webpackHotUpdate(0,{

/***/ 48:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.filterTable = filterTable;\nexports.addMessage = addMessage;\nexports.addInputHistory = addInputHistory;\nexports.moveInputHistory = moveInputHistory;\nexports.hint = hint;\nexports.updateFunc = updateFunc;\nexports.updateResults = updateResults;\nexports.updateDocEvent = updateDocEvent;\nexports.setDocs = setDocs;\nexports.setCodeEdit = setCodeEdit;\nexports.updateCodeEditor = updateCodeEditor;\nexports.addCommandArg = addCommandArg;\nexports.addExample = addExample;\nexports.updateCommandArg = updateCommandArg;\nexports.deleteCommandArg = deleteCommandArg;\nexports.storeCurrentInput = storeCurrentInput;\nexports.hideConversation = hideConversation;\n\nvar _types = __webpack_require__(274);\n\nvar types = _interopRequireWildcard(_types);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction filterTable(filter) {\n    return {\n        type: types.FILTER,\n        filter: filter\n    };\n}\n\nfunction addMessage(message) {\n    return _extends({\n        type: types.ADD_MESSAGE\n    }, message);\n}\n\nfunction addInputHistory(message) {\n    return _extends({\n        type: types.ADD_INPUT_HISTORY\n    }, message);\n}\n\nfunction moveInputHistory(message) {\n    return _extends({\n        type: types.MOVE_INPUT_HISTORY\n    }, message);\n}\n\nfunction hint(message) {\n    return _extends({\n        type: types.HINT\n    }, message);\n}\n\nfunction updateFunc(message) {\n    return _extends({\n        type: types.UPDATE_FUNC\n    }, message);\n}\n\nfunction updateResults(message) {\n    return _extends({\n        type: types.UPDATE_RESULTS\n    }, message);\n}\n\nfunction updateDocEvent(message) {\n    return _extends({\n        type: types.UPDATE_DOCS\n    }, message);\n}\n\nfunction setDocs(message) {\n    return _extends({\n        type: types.SET_DOCS\n    }, message);\n}\n\nfunction setCodeEdit(message) {\n    return _extends({\n        type: types.SET_CODE_EDIT\n    }, message);\n}\n\nfunction updateCodeEditor(name, value) {\n    return {\n        type: types.UPDATE_CODE_EDITOR,\n        value: value,\n        name: name\n    };\n}\n\nfunction addCommandArg() {\n    return {\n        type: types.ADD_COMMAND_ARG\n    };\n}\n\nfunction addExample() {\n    return {\n        type: types.ADD_COMMAND_EXAMPLE\n    };\n}\n\nfunction updateCommandArg(id, values) {\n    return {\n        type: types.UPDATE_COMMAND_ARG,\n        id: id,\n        values: values\n    };\n}\n\nfunction deleteCommandArg(id) {\n    return {\n        type: types.DELETE_COMMAND_ARG,\n        id: id\n    };\n}\n\nfunction storeCurrentInput(input) {\n    return {\n        type: types.STORE_CURRENT_INPUT,\n        currentInput: input\n    };\n}\n\nfunction hideConversation(id) {\n    return {\n        type: types.HIDE_CONVERSATION,\n        id: id\n    };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYWN0aW9ucy9pbmRleC5qcz8xMjM2Il0sIm5hbWVzIjpbImZpbHRlclRhYmxlIiwiYWRkTWVzc2FnZSIsImFkZElucHV0SGlzdG9yeSIsIm1vdmVJbnB1dEhpc3RvcnkiLCJoaW50IiwidXBkYXRlRnVuYyIsInVwZGF0ZVJlc3VsdHMiLCJ1cGRhdGVEb2NFdmVudCIsInNldERvY3MiLCJzZXRDb2RlRWRpdCIsInVwZGF0ZUNvZGVFZGl0b3IiLCJhZGRDb21tYW5kQXJnIiwiYWRkRXhhbXBsZSIsInVwZGF0ZUNvbW1hbmRBcmciLCJkZWxldGVDb21tYW5kQXJnIiwic3RvcmVDdXJyZW50SW5wdXQiLCJoaWRlQ29udmVyc2F0aW9uIiwidHlwZXMiLCJmaWx0ZXIiLCJ0eXBlIiwiRklMVEVSIiwibWVzc2FnZSIsIkFERF9NRVNTQUdFIiwiQUREX0lOUFVUX0hJU1RPUlkiLCJNT1ZFX0lOUFVUX0hJU1RPUlkiLCJISU5UIiwiVVBEQVRFX0ZVTkMiLCJVUERBVEVfUkVTVUxUUyIsIlVQREFURV9ET0NTIiwiU0VUX0RPQ1MiLCJTRVRfQ09ERV9FRElUIiwibmFtZSIsInZhbHVlIiwiVVBEQVRFX0NPREVfRURJVE9SIiwiQUREX0NPTU1BTkRfQVJHIiwiQUREX0NPTU1BTkRfRVhBTVBMRSIsImlkIiwidmFsdWVzIiwiVVBEQVRFX0NPTU1BTkRfQVJHIiwiREVMRVRFX0NPTU1BTkRfQVJHIiwiaW5wdXQiLCJTVE9SRV9DVVJSRU5UX0lOUFVUIiwiY3VycmVudElucHV0IiwiSElERV9DT05WRVJTQVRJT04iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O1FBRWdCQSxXLEdBQUFBLFc7UUFPQUMsVSxHQUFBQSxVO1FBT0FDLGUsR0FBQUEsZTtRQU9BQyxnQixHQUFBQSxnQjtRQU9BQyxJLEdBQUFBLEk7UUFPQUMsVSxHQUFBQSxVO1FBT0FDLGEsR0FBQUEsYTtRQU9BQyxjLEdBQUFBLGM7UUFPQUMsTyxHQUFBQSxPO1FBT0FDLFcsR0FBQUEsVztRQU9BQyxnQixHQUFBQSxnQjtRQVFBQyxhLEdBQUFBLGE7UUFNQUMsVSxHQUFBQSxVO1FBTUFDLGdCLEdBQUFBLGdCO1FBUUFDLGdCLEdBQUFBLGdCO1FBT0FDLGlCLEdBQUFBLGlCO1FBT0FDLGdCLEdBQUFBLGdCOztBQWxIaEI7O0lBQVlDLEs7Ozs7QUFFTCxTQUFTakIsV0FBVCxDQUFxQmtCLE1BQXJCLEVBQTZCO0FBQ2hDLFdBQU87QUFDSEMsY0FBTUYsTUFBTUcsTUFEVDtBQUVIRjtBQUZHLEtBQVA7QUFJSDs7QUFFTSxTQUFTakIsVUFBVCxDQUFvQm9CLE9BQXBCLEVBQTZCO0FBQ2hDO0FBQ0lGLGNBQU1GLE1BQU1LO0FBRGhCLE9BRU9ELE9BRlA7QUFJSDs7QUFFTSxTQUFTbkIsZUFBVCxDQUF5Qm1CLE9BQXpCLEVBQWtDO0FBQ3JDO0FBQ0lGLGNBQU1GLE1BQU1NO0FBRGhCLE9BRU9GLE9BRlA7QUFJSDs7QUFFTSxTQUFTbEIsZ0JBQVQsQ0FBMEJrQixPQUExQixFQUFtQztBQUN0QztBQUNJRixjQUFNRixNQUFNTztBQURoQixPQUVPSCxPQUZQO0FBSUg7O0FBRU0sU0FBU2pCLElBQVQsQ0FBY2lCLE9BQWQsRUFBdUI7QUFDMUI7QUFDSUYsY0FBTUYsTUFBTVE7QUFEaEIsT0FFT0osT0FGUDtBQUlIOztBQUVNLFNBQVNoQixVQUFULENBQW9CZ0IsT0FBcEIsRUFBNkI7QUFDaEM7QUFDSUYsY0FBTUYsTUFBTVM7QUFEaEIsT0FFT0wsT0FGUDtBQUlIOztBQUVNLFNBQVNmLGFBQVQsQ0FBdUJlLE9BQXZCLEVBQWdDO0FBQ25DO0FBQ0lGLGNBQU1GLE1BQU1VO0FBRGhCLE9BRU9OLE9BRlA7QUFJSDs7QUFFTSxTQUFTZCxjQUFULENBQXdCYyxPQUF4QixFQUFpQztBQUNwQztBQUNJRixjQUFNRixNQUFNVztBQURoQixPQUVPUCxPQUZQO0FBSUg7O0FBRU0sU0FBU2IsT0FBVCxDQUFpQmEsT0FBakIsRUFBMEI7QUFDN0I7QUFDSUYsY0FBTUYsTUFBTVk7QUFEaEIsT0FFT1IsT0FGUDtBQUlIOztBQUVNLFNBQVNaLFdBQVQsQ0FBcUJZLE9BQXJCLEVBQThCO0FBQ2pDO0FBQ0lGLGNBQU1GLE1BQU1hO0FBRGhCLE9BRU9ULE9BRlA7QUFJSDs7QUFFTSxTQUFTWCxnQkFBVCxDQUEwQnFCLElBQTFCLEVBQWdDQyxLQUFoQyxFQUF1QztBQUMxQyxXQUFPO0FBQ0hiLGNBQU1GLE1BQU1nQixrQkFEVDtBQUVIRCxlQUFPQSxLQUZKO0FBR0hELGNBQU1BO0FBSEgsS0FBUDtBQUtIOztBQUVNLFNBQVNwQixhQUFULEdBQXlCO0FBQzVCLFdBQU87QUFDSFEsY0FBTUYsTUFBTWlCO0FBRFQsS0FBUDtBQUdIOztBQUVNLFNBQVN0QixVQUFULEdBQXNCO0FBQ3pCLFdBQU87QUFDSE8sY0FBTUYsTUFBTWtCO0FBRFQsS0FBUDtBQUdIOztBQUVNLFNBQVN0QixnQkFBVCxDQUEwQnVCLEVBQTFCLEVBQThCQyxNQUE5QixFQUFzQztBQUN6QyxXQUFPO0FBQ0hsQixjQUFNRixNQUFNcUIsa0JBRFQ7QUFFSEYsY0FGRztBQUdIQyxnQkFBT0E7QUFISixLQUFQO0FBS0g7O0FBRU0sU0FBU3ZCLGdCQUFULENBQTBCc0IsRUFBMUIsRUFBOEI7QUFDakMsV0FBTztBQUNIakIsY0FBTUYsTUFBTXNCLGtCQURUO0FBRUhIO0FBRkcsS0FBUDtBQUlIOztBQUVNLFNBQVNyQixpQkFBVCxDQUEyQnlCLEtBQTNCLEVBQWtDO0FBQ3JDLFdBQU87QUFDSHJCLGNBQU1GLE1BQU13QixtQkFEVDtBQUVIQyxzQkFBY0Y7QUFGWCxLQUFQO0FBSUg7O0FBRU0sU0FBU3hCLGdCQUFULENBQTBCb0IsRUFBMUIsRUFBOEI7QUFDakMsV0FBTztBQUNIakIsY0FBTUYsTUFBTTBCLGlCQURUO0FBRUhQO0FBRkcsS0FBUDtBQUlIIiwiZmlsZSI6IjQ4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJUYWJsZShmaWx0ZXIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5GSUxURVIsXG4gICAgICAgIGZpbHRlclxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5BRERfTUVTU0FHRSxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRJbnB1dEhpc3RvcnkobWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLkFERF9JTlBVVF9ISVNUT1JZLFxuICAgICAgICAuLi5tZXNzYWdlXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vdmVJbnB1dEhpc3RvcnkobWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLk1PVkVfSU5QVVRfSElTVE9SWSxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaW50KG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5ISU5ULFxuICAgICAgICAuLi5tZXNzYWdlXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUZ1bmMobWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLlVQREFURV9GVU5DLFxuICAgICAgICAuLi5tZXNzYWdlXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVJlc3VsdHMobWVzc2FnZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IHR5cGVzLlVQREFURV9SRVNVTFRTLFxuICAgICAgICAuLi5tZXNzYWdlXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZURvY0V2ZW50KG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5VUERBVEVfRE9DUyxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXREb2NzKG1lc3NhZ2UpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5TRVRfRE9DUyxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRDb2RlRWRpdChtZXNzYWdlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuU0VUX0NPREVfRURJVCxcbiAgICAgICAgLi4ubWVzc2FnZVxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVDb2RlRWRpdG9yKG5hbWUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuVVBEQVRFX0NPREVfRURJVE9SLFxuICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgIG5hbWU6IG5hbWVcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkQ29tbWFuZEFyZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5BRERfQ09NTUFORF9BUkcsXG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZEV4YW1wbGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuQUREX0NPTU1BTkRfRVhBTVBMRSxcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29tbWFuZEFyZyhpZCwgdmFsdWVzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuVVBEQVRFX0NPTU1BTkRfQVJHLFxuICAgICAgICBpZCxcbiAgICAgICAgdmFsdWVzOnZhbHVlc1xuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVDb21tYW5kQXJnKGlkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZXMuREVMRVRFX0NPTU1BTkRfQVJHLFxuICAgICAgICBpZCxcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcmVDdXJyZW50SW5wdXQoaW5wdXQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5TVE9SRV9DVVJSRU5UX0lOUFVULFxuICAgICAgICBjdXJyZW50SW5wdXQ6IGlucHV0XG4gICAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVDb252ZXJzYXRpb24oaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiB0eXBlcy5ISURFX0NPTlZFUlNBVElPTixcbiAgICAgICAgaWRcbiAgICB9O1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2FjdGlvbnMvaW5kZXguanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 274:
/***/ (function(module, exports) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar UPDATE_PREDICTIONS = exports.UPDATE_PREDICTIONS = 'UPDATE_PREDICTIONS';\nvar ADD_INPUT_HISTORY = exports.ADD_INPUT_HISTORY = 'ADD_INPUT_HISTORY';\nvar STORE_CURRENT_INPUT = exports.STORE_CURRENT_INPUT = 'STORE_CURRENT_INPUT';\nvar MOVE_INPUT_HISTORY = exports.MOVE_INPUT_HISTORY = 'MOVE_INPUT_HISTORY';\nvar ADD_MESSAGE = exports.ADD_MESSAGE = 'ADD_MESSAGE';\nvar ADD_SERVER_MESSAGE = exports.ADD_SERVER_MESSAGE = 'ADD_SERVER_MESSAGE';\nvar UPDATE_VARIABLES = exports.UPDATE_VARIABLES = 'UPDATE_VARIABLES';\nvar UPDATE_HISTORY = exports.UPDATE_HISTORY = 'UPDATE_HISTORY'; // convo history\nvar HIDE_CONVERSATION = exports.HIDE_CONVERSATION = 'HIDE_CONVERSATION';\nvar UPDATE_DOCS = exports.UPDATE_DOCS = 'UPDATE_DOCS';\nvar UPDATE_FUNC = exports.UPDATE_FUNC = 'UPDATE_FUNC';\nvar UPDATE_RESULTS = exports.UPDATE_RESULTS = 'UPDATE_RESULTS';\nvar SET_DOCS = exports.SET_DOCS = 'SET_DOCS';\nvar SET_CODE_EDIT = exports.SET_CODE_EDIT = 'SET_CODE_EDIT';\nvar UPDATE_CODE_EDITOR = exports.UPDATE_CODE_EDITOR = 'UPDATE_CODE_EDITOR';\nvar ADD_COMMAND_ARG = exports.ADD_COMMAND_ARG = 'ADD_COMMAND_ARG';\nvar UPDATE_COMMAND_ARG = exports.UPDATE_COMMAND_ARG = 'UPDATE_COMMAND_ARG';\nvar DELETE_COMMAND_ARG = exports.DELETE_COMMAND_ARG = 'DELETE_COMMAND_ARG';\nvar ADD_COMMAND_EXAMPLE = exports.ADD_COMMAND_EXAMPLE = 'ADD_COMMAND_EXAMPLE';//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvYWN0aW9ucy90eXBlcy5qcz81ODQzIl0sIm5hbWVzIjpbIlVQREFURV9QUkVESUNUSU9OUyIsIkFERF9JTlBVVF9ISVNUT1JZIiwiU1RPUkVfQ1VSUkVOVF9JTlBVVCIsIk1PVkVfSU5QVVRfSElTVE9SWSIsIkFERF9NRVNTQUdFIiwiQUREX1NFUlZFUl9NRVNTQUdFIiwiVVBEQVRFX1ZBUklBQkxFUyIsIlVQREFURV9ISVNUT1JZIiwiSElERV9DT05WRVJTQVRJT04iLCJVUERBVEVfRE9DUyIsIlVQREFURV9GVU5DIiwiVVBEQVRFX1JFU1VMVFMiLCJTRVRfRE9DUyIsIlNFVF9DT0RFX0VESVQiLCJVUERBVEVfQ09ERV9FRElUT1IiLCJBRERfQ09NTUFORF9BUkciLCJVUERBVEVfQ09NTUFORF9BUkciLCJERUxFVEVfQ09NTUFORF9BUkciLCJBRERfQ09NTUFORF9FWEFNUExFIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFPLElBQU1BLGtEQUFxQixvQkFBM0I7QUFDQSxJQUFNQyxnREFBb0IsbUJBQTFCO0FBQ0EsSUFBTUMsb0RBQXNCLHFCQUE1QjtBQUNBLElBQU1DLGtEQUFxQixvQkFBM0I7QUFDQSxJQUFNQyxvQ0FBYyxhQUFwQjtBQUNBLElBQU1DLGtEQUFxQixvQkFBM0I7QUFDQSxJQUFNQyw4Q0FBbUIsa0JBQXpCO0FBQ0EsSUFBTUMsMENBQWlCLGdCQUF2QixDLENBQXlDO0FBQ3pDLElBQU1DLGdEQUFvQixtQkFBMUI7QUFDQSxJQUFNQyxvQ0FBYyxhQUFwQjtBQUNBLElBQU1DLG9DQUFjLGFBQXBCO0FBQ0EsSUFBTUMsMENBQWlCLGdCQUF2QjtBQUNBLElBQU1DLDhCQUFXLFVBQWpCO0FBQ0EsSUFBTUMsd0NBQWdCLGVBQXRCO0FBQ0EsSUFBTUMsa0RBQXFCLG9CQUEzQjtBQUNBLElBQU1DLDRDQUFrQixpQkFBeEI7QUFDQSxJQUFNQyxrREFBcUIsb0JBQTNCO0FBQ0EsSUFBTUMsa0RBQXFCLG9CQUEzQjtBQUNBLElBQU1DLG9EQUFzQixxQkFBNUIiLCJmaWxlIjoiMjc0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFVQREFURV9QUkVESUNUSU9OUyA9ICdVUERBVEVfUFJFRElDVElPTlMnO1xuZXhwb3J0IGNvbnN0IEFERF9JTlBVVF9ISVNUT1JZID0gJ0FERF9JTlBVVF9ISVNUT1JZJztcbmV4cG9ydCBjb25zdCBTVE9SRV9DVVJSRU5UX0lOUFVUID0gJ1NUT1JFX0NVUlJFTlRfSU5QVVQnO1xuZXhwb3J0IGNvbnN0IE1PVkVfSU5QVVRfSElTVE9SWSA9ICdNT1ZFX0lOUFVUX0hJU1RPUlknO1xuZXhwb3J0IGNvbnN0IEFERF9NRVNTQUdFID0gJ0FERF9NRVNTQUdFJztcbmV4cG9ydCBjb25zdCBBRERfU0VSVkVSX01FU1NBR0UgPSAnQUREX1NFUlZFUl9NRVNTQUdFJztcbmV4cG9ydCBjb25zdCBVUERBVEVfVkFSSUFCTEVTID0gJ1VQREFURV9WQVJJQUJMRVMnO1xuZXhwb3J0IGNvbnN0IFVQREFURV9ISVNUT1JZID0gJ1VQREFURV9ISVNUT1JZJzsgLy8gY29udm8gaGlzdG9yeVxuZXhwb3J0IGNvbnN0IEhJREVfQ09OVkVSU0FUSU9OID0gJ0hJREVfQ09OVkVSU0FUSU9OJztcbmV4cG9ydCBjb25zdCBVUERBVEVfRE9DUyA9ICdVUERBVEVfRE9DUyc7XG5leHBvcnQgY29uc3QgVVBEQVRFX0ZVTkMgPSAnVVBEQVRFX0ZVTkMnO1xuZXhwb3J0IGNvbnN0IFVQREFURV9SRVNVTFRTID0gJ1VQREFURV9SRVNVTFRTJztcbmV4cG9ydCBjb25zdCBTRVRfRE9DUyA9ICdTRVRfRE9DUyc7XG5leHBvcnQgY29uc3QgU0VUX0NPREVfRURJVCA9ICdTRVRfQ09ERV9FRElUJztcbmV4cG9ydCBjb25zdCBVUERBVEVfQ09ERV9FRElUT1IgPSAnVVBEQVRFX0NPREVfRURJVE9SJztcbmV4cG9ydCBjb25zdCBBRERfQ09NTUFORF9BUkcgPSAnQUREX0NPTU1BTkRfQVJHJztcbmV4cG9ydCBjb25zdCBVUERBVEVfQ09NTUFORF9BUkcgPSAnVVBEQVRFX0NPTU1BTkRfQVJHJztcbmV4cG9ydCBjb25zdCBERUxFVEVfQ09NTUFORF9BUkcgPSAnREVMRVRFX0NPTU1BTkRfQVJHJztcbmV4cG9ydCBjb25zdCBBRERfQ09NTUFORF9FWEFNUExFID0gJ0FERF9DT01NQU5EX0VYQU1QTEUnO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2FjdGlvbnMvdHlwZXMuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ }),

/***/ 456:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _reactRouterRedux = __webpack_require__(394);\n\nvar _redux = __webpack_require__(267);\n\nvar _types = __webpack_require__(274);\n\nvar types = _interopRequireWildcard(_types);\n\nvar _lodash = __webpack_require__(160);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar valueOrNull = function valueOrNull(value) {\n    if (value !== undefined) {\n        return value;\n    }\n    return null;\n};\n\nvar appendMessages = function appendMessages(oldMessages, action) {\n    // text, origin = 'user', type = null, arg = null) => {\n    var newMessages = [];\n    var currentMax = 0;\n    if (oldMessages.length > 0) {\n        console.log('map', _.map(oldMessages, function (m) {\n            return m.id;\n        }));\n        currentMax = _.max(_.map(oldMessages, function (m) {\n            return m.id;\n        }));\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = action.text[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var m = _step.value;\n\n            currentMax++;\n            newMessages.push({ 'origin': action.origin, 'text': m, 'id': currentMax,\n                'state': valueOrNull(action.state), 'arg': valueOrNull(action.arg) });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return oldMessages.concat(newMessages);\n};\n\nvar appendMessagesConvo = function appendMessagesConvo(convo, action) {\n    var messages = convo.messages;\n\n    return _extends({}, convo, { messages: appendMessages(messages, action), args: action.arg_map });\n};\n\nvar conversation = function conversation() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'history': [], 'currentConvo': { 'messages': [], 'title': null, 'hidden': false, 'id': 0, 'args': {} }, 'state': 'START' };\n    var action = arguments[1];\n    var history = state.history,\n        currentConvo = state.currentConvo;\n\n    var newConvo = void 0;\n    switch (action.type) {\n        case types.UPDATE_HISTORY:\n            console.log(action.conversation.currentConvo);\n            return { history: action.conversation.history, currentConvo: action.conversation.currentConvo, 'state': state.state };\n        case types.ADD_MESSAGE:\n            return { history: history, currentConvo: appendMessagesConvo(currentConvo, action), 'state': state.state };\n        case types.ADD_SERVER_MESSAGE:\n            if (action.text.length === 0) {\n                return state;\n            }\n            newConvo = appendMessagesConvo(currentConvo, action);\n            if (action.state === 'START') {\n                // hardcoding some logic here for syncing history with server on START\n                // this allows some commands to overwrite history immediately\n                var theId = action.history.length;\n                newConvo = _extends({}, newConvo, { title: action.label, id: theId });\n                return { history: action.history.concat([newConvo]), 'currentConvo': { 'messages': [], 'title': null, 'hidden': false, 'id': newConvo.id + 1, 'args': {} }, state: 'START' };\n            }\n            return { history: history, currentConvo: newConvo, state: action.state };\n        case types.HIDE_CONVERSATION:\n            var newHistory = _.map(history, function (conv) {\n                var out = _extends({}, conv);\n                if (conv.id === action.id) {\n                    out.hidden = !out.hidden;\n                }\n                return out;\n            });\n            newConvo = _extends({}, currentConvo);\n            if (newConvo.id === action.id) {\n                newConvo.hidden = !newConvo.hidden;\n            }\n            return { history: newHistory, currentConvo: newConvo, state: state.state };\n        default:\n            return state;\n    }\n};\n\nvar variables = function variables() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_VARIABLES:\n            return action.variables;\n        default:\n            return state;\n    }\n};\n\nvar predictions = function predictions() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_PREDICTIONS:\n            return action.predictions;\n        default:\n            return state;\n    }\n};\n\nvar docs = function docs() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { title: '', examples: [], description: [], source: '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_DOCS:\n            return action.doc;\n        default:\n            return state;\n    }\n};\n\nvar functionSearch = function functionSearch() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { search: '', results: [] };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_FUNC:\n            return _extends({}, state, { search: action.search });\n        case types.UPDATE_RESULTS:\n            return _extends({}, state, { results: action.results });\n        default:\n            return state;\n    }\n};\n\nvar currentInput = function currentInput() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'input': '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.STORE_CURRENT_INPUT:\n            return { 'input': action.currentInput };\n        default:\n            return state;\n    }\n};\n\nvar minimizeState = function minimizeState() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'docs': true, 'code_edit': true };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.SET_DOCS:\n            return _extends({}, state, { 'docs': action.docs });\n        case types.SET_CODE_EDIT:\n            return _extends({}, state, { 'code_edit': action.code_edit });\n        default:\n            return state;\n    }\n};\n\nvar commandEditPane = function commandEditPane() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { name: '', title: '', args: [], examples: [], command: '', explanation: '', testInput: '', preview: '', error: '' };\n    var action = arguments[1];\n\n    switch (action.type) {\n        case types.UPDATE_CODE_EDITOR:\n            var new_state = {};\n            new_state[action.name] = action.value;\n            return _extends({}, state, new_state);\n        case types.ADD_COMMAND_ARG:\n            return _extends({}, state, { args: state.args.concat([{ 'arg_name': '', 'arg_type': '', 'arg_string': '' }]) });\n        case types.ADD_COMMAND_EXAMPLE:\n            return _extends({}, state, { examples: state.args.concat(['']) });\n        case types.UPDATE_COMMAND_ARG:\n            var newArgs = state.args.concat([]);\n            newArgs[action.id] = action.values;\n            return _extends({}, state, { args: newArgs });\n        case types.DELETE_COMMAND_ARG:\n            var first_half = state.args.concat([]).slice(0, action.id);\n            var second_half = state.args.concat([]).slice(action.id + 1, state.args.length);\n            console.log(first_half.concat(second_half));\n            return _extends({}, state, { args: first_half.concat(second_half) });\n        default:\n            return state;\n    }\n};\n\nvar inputHistory = function inputHistory() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { 'history': [], 'currId': null, 'showHistory': false };\n    var action = arguments[1];\n\n    var newId = void 0;\n    switch (action.type) {\n        case types.ADD_INPUT_HISTORY:\n            newId = state.currId;\n            if (state.history.length === 0 && newId === null) {\n                newId = 0;\n            }\n            return _extends({}, state, { 'history': [].concat(_toConsumableArray(state.history), [action.message]), 'currId': newId });\n        case types.MOVE_INPUT_HISTORY:\n            if (state.history.length === 0) {\n                return state;\n            }\n            newId = state.currId || 0;\n            if (action.direction === 'up') {\n                if (newId < state.history.length - 1) {\n                    newId += 1;\n                }\n            } else {\n                if (newId >= 1) {\n                    newId -= 1;\n                }\n            }\n            return _extends({}, state, { 'currId': newId });\n        default:\n            return state;\n    }\n};\n\nvar rootReducer = (0, _redux.combineReducers)({\n    conversation: conversation,\n    variables: variables,\n    predictions: predictions,\n    inputHistory: inputHistory,\n    currentInput: currentInput,\n    docs: docs,\n    functionSearch: functionSearch,\n    minimizeState: minimizeState,\n    commandEditPane: commandEditPane,\n    routing: _reactRouterRedux.routerReducer\n});\n\nexports.default = rootReducer;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),

/***/ 1317:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(25);\n\nvar _index = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar addExampleButton = function addExampleButton(dispatch) {\n  return function () {\n    dispatch((0, _index.addExample)());\n  };\n};\n\nvar onClickDelete = function onClickDelete(dispatch) {\n  return function () {\n    console.log('hi');\n  };\n};\n\nvar ExamplesEditor = function ExamplesEditor(_ref) {\n  var dispatch = _ref.dispatch,\n      examples = _ref.examples;\n  return _react2.default.createElement(\n    'div',\n    { className: 'command_examples' },\n    _react2.default.createElement(\n      'button',\n      { onClick: addExampleButton(dispatch) },\n      'Add Example'\n    ),\n    examples.map(function (example, id) {\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'div',\n          { className: 'example' },\n          example\n        ),\n        _react2.default.createElement(\n          'button',\n          { onClick: function onClick() {\n              return onClickDelete(dispatch, id);\n            } },\n          'Delete'\n        )\n      );\n    })\n  );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    examples: state.commandEditPane.examples\n  };\n};\n\nExamplesEditor = (0, _reactRedux.connect)(mapStateToProps)(ExamplesEditor);\n\nexports.default = ExamplesEditor;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9FeGFtcGxlc0VkaXRvci5qcz82NWIwIl0sIm5hbWVzIjpbImFkZEV4YW1wbGVCdXR0b24iLCJkaXNwYXRjaCIsIm9uQ2xpY2tEZWxldGUiLCJjb25zb2xlIiwibG9nIiwiRXhhbXBsZXNFZGl0b3IiLCJleGFtcGxlcyIsIm1hcCIsImV4YW1wbGUiLCJpZCIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIiwiY29tbWFuZEVkaXRQYW5lIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ0MsUUFBRDtBQUFBLFNBQ3ZCLFlBQU07QUFDSkEsYUFBUyx3QkFBVDtBQUNELEdBSHNCO0FBQUEsQ0FBekI7O0FBS0EsSUFBTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDRCxRQUFEO0FBQUEsU0FDcEIsWUFBTTtBQUNKRSxZQUFRQyxHQUFSLENBQVksSUFBWjtBQUNELEdBSG1CO0FBQUEsQ0FBdEI7O0FBS0EsSUFBSUMsaUJBQWlCO0FBQUEsTUFBR0osUUFBSCxRQUFHQSxRQUFIO0FBQUEsTUFBYUssUUFBYixRQUFhQSxRQUFiO0FBQUEsU0FDakI7QUFBQTtBQUFBLE1BQUssV0FBVSxrQkFBZjtBQUNJO0FBQUE7QUFBQSxRQUFRLFNBQVNOLGlCQUFpQkMsUUFBakIsQ0FBakI7QUFBQTtBQUFBLEtBREo7QUFFS0ssYUFBU0MsR0FBVCxDQUFhLFVBQUNDLE9BQUQsRUFBVUMsRUFBVjtBQUFBLGFBQWlCO0FBQUE7QUFBQTtBQUFLO0FBQUE7QUFBQSxZQUFLLFdBQVUsU0FBZjtBQUEwQkQ7QUFBMUIsU0FBTDtBQUE2QztBQUFBO0FBQUEsWUFBUSxTQUFTO0FBQUEscUJBQU1OLGNBQWNELFFBQWQsRUFBd0JRLEVBQXhCLENBQU47QUFBQSxhQUFqQjtBQUFBO0FBQUE7QUFBN0MsT0FBakI7QUFBQSxLQUFiO0FBRkwsR0FEaUI7QUFBQSxDQUFyQjs7QUFNQSxJQUFNQyxrQkFBa0IsU0FBbEJBLGVBQWtCLENBQUNDLEtBQUQ7QUFBQSxTQUFZO0FBQ2xDTCxjQUFVSyxNQUFNQyxlQUFOLENBQXNCTjtBQURFLEdBQVo7QUFBQSxDQUF4Qjs7QUFJQUQsaUJBQWlCLHlCQUFRSyxlQUFSLEVBQXlCTCxjQUF6QixDQUFqQjs7a0JBRWVBLGMiLCJmaWxlIjoiMTMxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHsgYWRkRXhhbXBsZSB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuXG5jb25zdCBhZGRFeGFtcGxlQnV0dG9uID0gKGRpc3BhdGNoKSA9PlxuICAoKSA9PiB7XG4gICAgZGlzcGF0Y2goYWRkRXhhbXBsZSgpKTtcbiAgfTtcblxuY29uc3Qgb25DbGlja0RlbGV0ZSA9IChkaXNwYXRjaCkgPT5cbiAgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdoaScpO1xuICB9O1xuXG5sZXQgRXhhbXBsZXNFZGl0b3IgPSAoeyBkaXNwYXRjaCwgZXhhbXBsZXMgfSkgPT5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbW1hbmRfZXhhbXBsZXNcIj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXthZGRFeGFtcGxlQnV0dG9uKGRpc3BhdGNoKX0+QWRkIEV4YW1wbGU8L2J1dHRvbj5cbiAgICAgICAge2V4YW1wbGVzLm1hcCgoZXhhbXBsZSwgaWQpID0+IDxkaXY+PGRpdiBjbGFzc05hbWU9XCJleGFtcGxlXCI+e2V4YW1wbGV9PC9kaXY+PGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBvbkNsaWNrRGVsZXRlKGRpc3BhdGNoLCBpZCl9PkRlbGV0ZTwvYnV0dG9uPjwvZGl2Pil9XG4gICAgPC9kaXY+O1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XG4gIGV4YW1wbGVzOiBzdGF0ZS5jb21tYW5kRWRpdFBhbmUuZXhhbXBsZXMsXG59KTtcblxuRXhhbXBsZXNFZGl0b3IgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoRXhhbXBsZXNFZGl0b3IpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGFtcGxlc0VkaXRvcjtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9jb21wb25lbnRzL0V4YW1wbGVzRWRpdG9yLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

})