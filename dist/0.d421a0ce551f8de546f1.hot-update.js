webpackHotUpdate(0,{

/***/ 501:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setInput = exports.PredictionStrip = undefined;\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputBox = __webpack_require__(130);\n\nvar _python = __webpack_require__(61);\n\nvar _index = __webpack_require__(35);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// set main input text and update hint\nvar setInput = function setInput(dispatch, text, id) {\n    return function () {\n        var stripText = text.replace(/{/g, '').replace(/}/g, '');\n        _InputBox.input.value = stripText;\n        (0, _python.updateHint)(stripText);\n        dispatch((0, _index.storeClassIndex)(id));\n    };\n};\n\nvar reorder = function reorder(currIndex, predictions) {\n    console.log(currIndex, predictions);\n    return [].concat(_toConsumableArray(_.filter(predictions, function (p) {\n        return p.id === currIndex;\n    })), _toConsumableArray(_.filter(predictions, function (p) {\n        return p.id !== currIndex;\n    })));\n};\n\n// TODO: should logic that binds to tab-key press be here as well?\n\n// defines component for prediction strip above main input text\nvar PredictionStrip = function PredictionStrip(_ref) {\n    var dispatch = _ref.dispatch,\n        predictions = _ref.predictions,\n        currIndex = _ref.currIndex;\n\n    // TODO: optimize width\n    var charLength = predictions.map(function (p) {\n        return p.text.length;\n    }).reduce(function (x, y) {\n        return x + y;\n    }, 0);\n    return _react2.default.createElement(\n        'div',\n        { className: 'prediction_strip' },\n        _react2.default.createElement(\n            'div',\n            { className: 'predictions', style: { width: charLength * 9 + \"px\" } },\n            reorder(currIndex, predictions).map(function (obj, i) {\n                return _react2.default.createElement(\n                    'span',\n                    { onClick: setInput(dispatch, obj.text, obj.id), className: \"prediction \" + obj.style },\n                    obj.text\n                );\n            })\n        )\n    );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n    return {\n        predictions: state.predictions,\n        currIndex: state.currentInput.classIndex // for selected prediction\n    };\n};\n\nexports.PredictionStrip = PredictionStrip = (0, _reactRedux.connect)(mapStateToProps)(PredictionStrip);\n\nexports.PredictionStrip = PredictionStrip;\nexports.setInput = setInput;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanM/ZDFhMiJdLCJuYW1lcyI6WyJfIiwic2V0SW5wdXQiLCJkaXNwYXRjaCIsInRleHQiLCJpZCIsInN0cmlwVGV4dCIsInJlcGxhY2UiLCJ2YWx1ZSIsInJlb3JkZXIiLCJjdXJySW5kZXgiLCJwcmVkaWN0aW9ucyIsImNvbnNvbGUiLCJsb2ciLCJmaWx0ZXIiLCJwIiwiUHJlZGljdGlvblN0cmlwIiwiY2hhckxlbmd0aCIsIm1hcCIsImxlbmd0aCIsInJlZHVjZSIsIngiLCJ5Iiwid2lkdGgiLCJvYmoiLCJpIiwic3R5bGUiLCJtYXBTdGF0ZVRvUHJvcHMiLCJzdGF0ZSIsImN1cnJlbnRJbnB1dCIsImNsYXNzSW5kZXgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztJQUFZQSxDOzs7Ozs7OztBQUVaO0FBQ0EsSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQUNDLFFBQUQsRUFBV0MsSUFBWCxFQUFpQkMsRUFBakIsRUFBd0I7QUFDckMsV0FBTyxZQUFNO0FBQ1QsWUFBSUMsWUFBWUYsS0FBS0csT0FBTCxDQUFhLElBQWIsRUFBbUIsRUFBbkIsRUFBdUJBLE9BQXZCLENBQStCLElBQS9CLEVBQXFDLEVBQXJDLENBQWhCO0FBQ0Esd0JBQU1DLEtBQU4sR0FBY0YsU0FBZDtBQUNBLGdDQUFXQSxTQUFYO0FBQ0FILGlCQUFTLDRCQUFnQkUsRUFBaEIsQ0FBVDtBQUNILEtBTEQ7QUFNSCxDQVBEOztBQVNBLElBQU1JLFVBQVUsU0FBVkEsT0FBVSxDQUFDQyxTQUFELEVBQVlDLFdBQVosRUFBNEI7QUFDMUNDLFlBQVFDLEdBQVIsQ0FBWUgsU0FBWixFQUF1QkMsV0FBdkI7QUFDQSx3Q0FBWVYsRUFBRWEsTUFBRixDQUFTSCxXQUFULEVBQXNCLFVBQUNJLENBQUQ7QUFBQSxlQUFPQSxFQUFFVixFQUFGLEtBQVNLLFNBQWhCO0FBQUEsS0FBdEIsQ0FBWixzQkFBbUVULEVBQUVhLE1BQUYsQ0FBU0gsV0FBVCxFQUFzQixVQUFDSSxDQUFEO0FBQUEsZUFBT0EsRUFBRVYsRUFBRixLQUFTSyxTQUFoQjtBQUFBLEtBQXRCLENBQW5FO0FBQ0QsQ0FIRDs7QUFLQTs7QUFFQTtBQUNBLElBQUlNLGtCQUFrQiwrQkFBd0M7QUFBQSxRQUF0Q2IsUUFBc0MsUUFBdENBLFFBQXNDO0FBQUEsUUFBNUJRLFdBQTRCLFFBQTVCQSxXQUE0QjtBQUFBLFFBQWZELFNBQWUsUUFBZkEsU0FBZTs7QUFDNUQ7QUFDQSxRQUFNTyxhQUFhTixZQUFZTyxHQUFaLENBQWdCLFVBQUNILENBQUQ7QUFBQSxlQUFPQSxFQUFFWCxJQUFGLENBQU9lLE1BQWQ7QUFBQSxLQUFoQixFQUFzQ0MsTUFBdEMsQ0FBNkMsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFIO0FBQUEsZUFBU0QsSUFBSUMsQ0FBYjtBQUFBLEtBQTdDLEVBQTZELENBQTdELENBQW5CO0FBQ0EsV0FBUTtBQUFBO0FBQUEsVUFBSyxXQUFVLGtCQUFmO0FBQ0Y7QUFBQTtBQUFBLGNBQUssV0FBVSxhQUFmLEVBQTZCLE9BQU8sRUFBQ0MsT0FBUU4sYUFBYSxDQUFkLEdBQW1CLElBQTNCLEVBQXBDO0FBQ0dSLG9CQUFRQyxTQUFSLEVBQW1CQyxXQUFuQixFQUFnQ08sR0FBaEMsQ0FBb0MsVUFBQ00sR0FBRCxFQUFLQyxDQUFMO0FBQUEsdUJBQVc7QUFBQTtBQUFBLHNCQUFNLFNBQVN2QixTQUFTQyxRQUFULEVBQW1CcUIsSUFBSXBCLElBQXZCLEVBQTZCb0IsSUFBSW5CLEVBQWpDLENBQWYsRUFBcUQsV0FBVyxnQkFBZ0JtQixJQUFJRSxLQUFwRjtBQUE2RkYsd0JBQUlwQjtBQUFqRyxpQkFBWDtBQUFBLGFBQXBDO0FBREg7QUFERSxLQUFSO0FBS0QsQ0FSRDs7QUFZQSxJQUFNdUIsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxLQUFEO0FBQUEsV0FBWTtBQUNoQ2pCLHFCQUFhaUIsTUFBTWpCLFdBRGE7QUFFaENELG1CQUFXa0IsTUFBTUMsWUFBTixDQUFtQkMsVUFGRSxDQUVTO0FBRlQsS0FBWjtBQUFBLENBQXhCOztBQUtBLFFBRVFkLGVBRlIscUJBQWtCLHlCQUFRVyxlQUFSLEVBQXlCWCxlQUF6QixDQUFsQjs7UUFFUUEsZSxHQUFBQSxlO1FBQWlCZCxRLEdBQUFBLFEiLCJmaWxlIjoiNTAxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlucHV0IH0gZnJvbSAnLi4vY29udGFpbmVycy9JbnB1dEJveCc7XG5pbXBvcnQgeyB1cGRhdGVIaW50IH0gZnJvbSAnLi4vYXBpX2NhbGxzL3B5dGhvbi5qcyc7XG5pbXBvcnQgeyBzdG9yZUNsYXNzSW5kZXgsIGNsZWFyQ2xhc3NJbmRleCB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuLy8gc2V0IG1haW4gaW5wdXQgdGV4dCBhbmQgdXBkYXRlIGhpbnRcbmNvbnN0IHNldElucHV0ID0gKGRpc3BhdGNoLCB0ZXh0ICxpZCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGxldCBzdHJpcFRleHQgPSB0ZXh0LnJlcGxhY2UoL3svZywgJycpLnJlcGxhY2UoL30vZywgJycpO1xuICAgICAgICBpbnB1dC52YWx1ZSA9IHN0cmlwVGV4dDtcbiAgICAgICAgdXBkYXRlSGludChzdHJpcFRleHQpO1xuICAgICAgICBkaXNwYXRjaChzdG9yZUNsYXNzSW5kZXgoaWQpKTtcbiAgICB9O1xufTtcblxuY29uc3QgcmVvcmRlciA9IChjdXJySW5kZXgsIHByZWRpY3Rpb25zKSA9PiB7XG4gIGNvbnNvbGUubG9nKGN1cnJJbmRleCwgcHJlZGljdGlvbnMpO1xuICByZXR1cm4gWy4uLihfLmZpbHRlcihwcmVkaWN0aW9ucywgKHApID0+IHAuaWQgPT09IGN1cnJJbmRleCkpLCAuLi4oXy5maWx0ZXIocHJlZGljdGlvbnMsIChwKSA9PiBwLmlkICE9PSBjdXJySW5kZXgpKV1cbn07XG5cbi8vIFRPRE86IHNob3VsZCBsb2dpYyB0aGF0IGJpbmRzIHRvIHRhYi1rZXkgcHJlc3MgYmUgaGVyZSBhcyB3ZWxsP1xuXG4vLyBkZWZpbmVzIGNvbXBvbmVudCBmb3IgcHJlZGljdGlvbiBzdHJpcCBhYm92ZSBtYWluIGlucHV0IHRleHRcbmxldCBQcmVkaWN0aW9uU3RyaXAgPSAoe2Rpc3BhdGNoLCBwcmVkaWN0aW9ucywgY3VyckluZGV4fSkgPT4ge1xuICAvLyBUT0RPOiBvcHRpbWl6ZSB3aWR0aFxuICBjb25zdCBjaGFyTGVuZ3RoID0gcHJlZGljdGlvbnMubWFwKChwKSA9PiBwLnRleHQubGVuZ3RoKS5yZWR1Y2UoKHgseSkgPT4geCArIHksIDApO1xuICByZXR1cm4gKDxkaXYgY2xhc3NOYW1lPVwicHJlZGljdGlvbl9zdHJpcFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rpb25zXCIgc3R5bGU9e3t3aWR0aDogKGNoYXJMZW5ndGggKiA5KSArIFwicHhcIn19PlxuICAgICAgICAgIHtyZW9yZGVyKGN1cnJJbmRleCwgcHJlZGljdGlvbnMpLm1hcCgob2JqLGkpID0+IDxzcGFuIG9uQ2xpY2s9e3NldElucHV0KGRpc3BhdGNoLCBvYmoudGV4dCwgb2JqLmlkKX0gY2xhc3NOYW1lPXtcInByZWRpY3Rpb24gXCIgKyBvYmouc3R5bGV9Pnsgb2JqLnRleHQgfTwvc3Bhbj4pfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2Pik7XG59O1xuXG5cblxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0YXRlKSA9PiAoe1xuICAgIHByZWRpY3Rpb25zOiBzdGF0ZS5wcmVkaWN0aW9ucyxcbiAgICBjdXJySW5kZXg6IHN0YXRlLmN1cnJlbnRJbnB1dC5jbGFzc0luZGV4IC8vIGZvciBzZWxlY3RlZCBwcmVkaWN0aW9uXG59KTtcblxuUHJlZGljdGlvblN0cmlwID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKFByZWRpY3Rpb25TdHJpcCk7XG5cbmV4cG9ydCB7UHJlZGljdGlvblN0cmlwLCBzZXRJbnB1dH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ })

})