webpackHotUpdate(0,{

/***/ 501:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInput = exports.PredictionStrip = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputBox = __webpack_require__(130);\n\nvar _python = __webpack_require__(61);\n\nvar _index = __webpack_require__(35);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// set main input text and update hint\nvar setInput = function setInput(dispatch, text, id) {\n  return function () {\n    var stripText = text.replace(/{/g, '').replace(/}/g, '');\n    _InputBox.input.value = stripText;\n    (0, _python.updateHint)(stripText);\n    dispatch((0, _index.storeClassIndex)(id));\n  };\n};\n\nvar normalStyle = function normalStyle(lst) {\n  return [_map(lst, function (p) {\n    return _extends({}, p, { style: \"normal\" });\n  })];\n};\n\nvar selectedStyle = function selectedStyle(lst) {\n  return [_map(lst, function (p) {\n    return _extends({}, p, { style: \"c0\" });\n  })];\n};\n\nvar reorder = function reorder(currIndex, predictions) {\n  console.log(currIndex, predictions);\n  return [].concat(_toConsumableArray(selectedStyle(_.filter(predictions, function (p) {\n    return p.id === currIndex;\n  }))), _toConsumableArray(normalStyle(_.filter(predictions, function (p) {\n    return p.id !== currIndex;\n  }))));\n};\n\n// TODO: should logic that binds to tab-key press be here as well?\n\n// defines component for prediction strip above main input text\nvar PredictionStrip = function PredictionStrip(_ref) {\n  var dispatch = _ref.dispatch,\n      predictions = _ref.predictions,\n      currIndex = _ref.currIndex;\n\n  // TODO: optimize width\n  var charLength = predictions.map(function (p) {\n    return p.text.length;\n  }).reduce(function (x, y) {\n    return x + y;\n  }, 0);\n  return _react2.default.createElement(\n    'div',\n    { className: 'prediction_strip' },\n    _react2.default.createElement(\n      'div',\n      { className: 'predictions', style: { width: charLength * 9 + \"px\" } },\n      reorder(currIndex, predictions).map(function (obj, i) {\n        return _react2.default.createElement(\n          'span',\n          { onClick: setInput(dispatch, obj.text, obj.id), className: \"prediction \" + obj.style },\n          obj.text\n        );\n      })\n    )\n  );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    predictions: state.predictions,\n    currIndex: state.currentInput.classIndex // for selected prediction\n  };\n};\n\nexports.PredictionStrip = PredictionStrip = (0, _reactRedux.connect)(mapStateToProps)(PredictionStrip);\n\nexports.PredictionStrip = PredictionStrip;\nexports.setInput = setInput;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanM/ZDFhMiJdLCJuYW1lcyI6WyJfIiwic2V0SW5wdXQiLCJkaXNwYXRjaCIsInRleHQiLCJpZCIsInN0cmlwVGV4dCIsInJlcGxhY2UiLCJ2YWx1ZSIsIm5vcm1hbFN0eWxlIiwibHN0IiwiX21hcCIsInAiLCJzdHlsZSIsInNlbGVjdGVkU3R5bGUiLCJyZW9yZGVyIiwiY3VyckluZGV4IiwicHJlZGljdGlvbnMiLCJjb25zb2xlIiwibG9nIiwiZmlsdGVyIiwiUHJlZGljdGlvblN0cmlwIiwiY2hhckxlbmd0aCIsIm1hcCIsImxlbmd0aCIsInJlZHVjZSIsIngiLCJ5Iiwid2lkdGgiLCJvYmoiLCJpIiwibWFwU3RhdGVUb1Byb3BzIiwic3RhdGUiLCJjdXJyZW50SW5wdXQiLCJjbGFzc0luZGV4Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztJQUFZQSxDOzs7Ozs7OztBQUVaO0FBQ0EsSUFBTUMsV0FBVyxTQUFYQSxRQUFXLENBQUNDLFFBQUQsRUFBV0MsSUFBWCxFQUFpQkMsRUFBakIsRUFBd0I7QUFDckMsU0FBTyxZQUFNO0FBQ1QsUUFBSUMsWUFBWUYsS0FBS0csT0FBTCxDQUFhLElBQWIsRUFBbUIsRUFBbkIsRUFBdUJBLE9BQXZCLENBQStCLElBQS9CLEVBQXFDLEVBQXJDLENBQWhCO0FBQ0Esb0JBQU1DLEtBQU4sR0FBY0YsU0FBZDtBQUNBLDRCQUFXQSxTQUFYO0FBQ0FILGFBQVMsNEJBQWdCRSxFQUFoQixDQUFUO0FBQ0gsR0FMRDtBQU1ILENBUEQ7O0FBU0EsSUFBTUksY0FBYyxTQUFkQSxXQUFjLENBQUNDLEdBQUQsRUFBUztBQUMzQixTQUFPLENBQUNDLEtBQUtELEdBQUwsRUFBVSxVQUFDRSxDQUFELEVBQU87QUFBRSx3QkFBV0EsQ0FBWCxJQUFjQyxPQUFPLFFBQXJCO0FBQWlDLEdBQXBELENBQUQsQ0FBUDtBQUNELENBRkQ7O0FBSUEsSUFBTUMsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDSixHQUFELEVBQVM7QUFDN0IsU0FBTyxDQUFDQyxLQUFLRCxHQUFMLEVBQVUsVUFBQ0UsQ0FBRCxFQUFPO0FBQUUsd0JBQVdBLENBQVgsSUFBY0MsT0FBTyxJQUFyQjtBQUE2QixHQUFoRCxDQUFELENBQVA7QUFDRCxDQUZEOztBQUlBLElBQU1FLFVBQVUsU0FBVkEsT0FBVSxDQUFDQyxTQUFELEVBQVlDLFdBQVosRUFBNEI7QUFDMUNDLFVBQVFDLEdBQVIsQ0FBWUgsU0FBWixFQUF1QkMsV0FBdkI7QUFDQSxzQ0FBV0gsY0FBY2IsRUFBRW1CLE1BQUYsQ0FBU0gsV0FBVCxFQUFzQixVQUFDTCxDQUFEO0FBQUEsV0FBT0EsRUFBRVAsRUFBRixLQUFTVyxTQUFoQjtBQUFBLEdBQXRCLENBQWQsQ0FBWCxzQkFDV1AsWUFBWVIsRUFBRW1CLE1BQUYsQ0FBU0gsV0FBVCxFQUFzQixVQUFDTCxDQUFEO0FBQUEsV0FBT0EsRUFBRVAsRUFBRixLQUFTVyxTQUFoQjtBQUFBLEdBQXRCLENBQVosQ0FEWDtBQUVELENBSkQ7O0FBTUE7O0FBRUE7QUFDQSxJQUFJSyxrQkFBa0IsK0JBQXdDO0FBQUEsTUFBdENsQixRQUFzQyxRQUF0Q0EsUUFBc0M7QUFBQSxNQUE1QmMsV0FBNEIsUUFBNUJBLFdBQTRCO0FBQUEsTUFBZkQsU0FBZSxRQUFmQSxTQUFlOztBQUM1RDtBQUNBLE1BQU1NLGFBQWFMLFlBQVlNLEdBQVosQ0FBZ0IsVUFBQ1gsQ0FBRDtBQUFBLFdBQU9BLEVBQUVSLElBQUYsQ0FBT29CLE1BQWQ7QUFBQSxHQUFoQixFQUFzQ0MsTUFBdEMsQ0FBNkMsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFIO0FBQUEsV0FBU0QsSUFBSUMsQ0FBYjtBQUFBLEdBQTdDLEVBQTZELENBQTdELENBQW5CO0FBQ0EsU0FBUTtBQUFBO0FBQUEsTUFBSyxXQUFVLGtCQUFmO0FBQ0Y7QUFBQTtBQUFBLFFBQUssV0FBVSxhQUFmLEVBQTZCLE9BQU8sRUFBQ0MsT0FBUU4sYUFBYSxDQUFkLEdBQW1CLElBQTNCLEVBQXBDO0FBQ0dQLGNBQVFDLFNBQVIsRUFBbUJDLFdBQW5CLEVBQWdDTSxHQUFoQyxDQUFvQyxVQUFDTSxHQUFELEVBQUtDLENBQUw7QUFBQSxlQUFXO0FBQUE7QUFBQSxZQUFNLFNBQVM1QixTQUFTQyxRQUFULEVBQW1CMEIsSUFBSXpCLElBQXZCLEVBQTZCeUIsSUFBSXhCLEVBQWpDLENBQWYsRUFBcUQsV0FBVyxnQkFBZ0J3QixJQUFJaEIsS0FBcEY7QUFBNkZnQixjQUFJekI7QUFBakcsU0FBWDtBQUFBLE9BQXBDO0FBREg7QUFERSxHQUFSO0FBS0QsQ0FSRDs7QUFZQSxJQUFNMkIsa0JBQWtCLFNBQWxCQSxlQUFrQixDQUFDQyxLQUFEO0FBQUEsU0FBWTtBQUNoQ2YsaUJBQWFlLE1BQU1mLFdBRGE7QUFFaENELGVBQVdnQixNQUFNQyxZQUFOLENBQW1CQyxVQUZFLENBRVM7QUFGVCxHQUFaO0FBQUEsQ0FBeEI7O0FBS0EsUUFFUWIsZUFGUixxQkFBa0IseUJBQVFVLGVBQVIsRUFBeUJWLGVBQXpCLENBQWxCOztRQUVRQSxlLEdBQUFBLGU7UUFBaUJuQixRLEdBQUFBLFEiLCJmaWxlIjoiNTAxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlucHV0IH0gZnJvbSAnLi4vY29udGFpbmVycy9JbnB1dEJveCc7XG5pbXBvcnQgeyB1cGRhdGVIaW50IH0gZnJvbSAnLi4vYXBpX2NhbGxzL3B5dGhvbi5qcyc7XG5pbXBvcnQgeyBzdG9yZUNsYXNzSW5kZXgsIGNsZWFyQ2xhc3NJbmRleCB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuLy8gc2V0IG1haW4gaW5wdXQgdGV4dCBhbmQgdXBkYXRlIGhpbnRcbmNvbnN0IHNldElucHV0ID0gKGRpc3BhdGNoLCB0ZXh0ICxpZCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGxldCBzdHJpcFRleHQgPSB0ZXh0LnJlcGxhY2UoL3svZywgJycpLnJlcGxhY2UoL30vZywgJycpO1xuICAgICAgICBpbnB1dC52YWx1ZSA9IHN0cmlwVGV4dDtcbiAgICAgICAgdXBkYXRlSGludChzdHJpcFRleHQpO1xuICAgICAgICBkaXNwYXRjaChzdG9yZUNsYXNzSW5kZXgoaWQpKTtcbiAgICB9O1xufTtcblxuY29uc3Qgbm9ybWFsU3R5bGUgPSAobHN0KSA9PiB7XG4gIHJldHVybiBbX21hcChsc3QsIChwKSA9PiB7IHJldHVybiB7Li4ucCwgc3R5bGU6IFwibm9ybWFsXCJ9OyB9KV07XG59O1xuXG5jb25zdCBzZWxlY3RlZFN0eWxlID0gKGxzdCkgPT4ge1xuICByZXR1cm4gW19tYXAobHN0LCAocCkgPT4geyByZXR1cm4gey4uLnAsIHN0eWxlOiBcImMwXCJ9OyB9KV07XG59O1xuXG5jb25zdCByZW9yZGVyID0gKGN1cnJJbmRleCwgcHJlZGljdGlvbnMpID0+IHtcbiAgY29uc29sZS5sb2coY3VyckluZGV4LCBwcmVkaWN0aW9ucyk7XG4gIHJldHVybiBbLi4uc2VsZWN0ZWRTdHlsZShfLmZpbHRlcihwcmVkaWN0aW9ucywgKHApID0+IHAuaWQgPT09IGN1cnJJbmRleCkpLFxuICAgICAgICAgIC4uLm5vcm1hbFN0eWxlKF8uZmlsdGVyKHByZWRpY3Rpb25zLCAocCkgPT4gcC5pZCAhPT0gY3VyckluZGV4KSldXG59O1xuXG4vLyBUT0RPOiBzaG91bGQgbG9naWMgdGhhdCBiaW5kcyB0byB0YWIta2V5IHByZXNzIGJlIGhlcmUgYXMgd2VsbD9cblxuLy8gZGVmaW5lcyBjb21wb25lbnQgZm9yIHByZWRpY3Rpb24gc3RyaXAgYWJvdmUgbWFpbiBpbnB1dCB0ZXh0XG5sZXQgUHJlZGljdGlvblN0cmlwID0gKHtkaXNwYXRjaCwgcHJlZGljdGlvbnMsIGN1cnJJbmRleH0pID0+IHtcbiAgLy8gVE9ETzogb3B0aW1pemUgd2lkdGhcbiAgY29uc3QgY2hhckxlbmd0aCA9IHByZWRpY3Rpb25zLm1hcCgocCkgPT4gcC50ZXh0Lmxlbmd0aCkucmVkdWNlKCh4LHkpID0+IHggKyB5LCAwKTtcbiAgcmV0dXJuICg8ZGl2IGNsYXNzTmFtZT1cInByZWRpY3Rpb25fc3RyaXBcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwcmVkaWN0aW9uc1wiIHN0eWxlPXt7d2lkdGg6IChjaGFyTGVuZ3RoICogOSkgKyBcInB4XCJ9fT5cbiAgICAgICAgICB7cmVvcmRlcihjdXJySW5kZXgsIHByZWRpY3Rpb25zKS5tYXAoKG9iaixpKSA9PiA8c3BhbiBvbkNsaWNrPXtzZXRJbnB1dChkaXNwYXRjaCwgb2JqLnRleHQsIG9iai5pZCl9IGNsYXNzTmFtZT17XCJwcmVkaWN0aW9uIFwiICsgb2JqLnN0eWxlfT57IG9iai50ZXh0IH08L3NwYW4+KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj4pO1xufTtcblxuXG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSkgPT4gKHtcbiAgICBwcmVkaWN0aW9uczogc3RhdGUucHJlZGljdGlvbnMsXG4gICAgY3VyckluZGV4OiBzdGF0ZS5jdXJyZW50SW5wdXQuY2xhc3NJbmRleCAvLyBmb3Igc2VsZWN0ZWQgcHJlZGljdGlvblxufSk7XG5cblByZWRpY3Rpb25TdHJpcCA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKShQcmVkaWN0aW9uU3RyaXApO1xuXG5leHBvcnQge1ByZWRpY3Rpb25TdHJpcCwgc2V0SW5wdXR9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vYXBwL2NvbXBvbmVudHMvUHJlZGljdGlvblN0cmlwLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");

/***/ })

})