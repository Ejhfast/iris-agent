webpackHotUpdate(0,{

/***/ 501:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setInput = exports.PredictionStrip = undefined;\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputBox = __webpack_require__(130);\n\nvar _python = __webpack_require__(61);\n\nvar _index = __webpack_require__(35);\n\nvar _reactRedux = __webpack_require__(30);\n\nvar _lodash = __webpack_require__(140);\n\nvar _ = _interopRequireWildcard(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n// set main input text and update hint\nvar setInput = function setInput(dispatch, text, id) {\n  return function () {\n    var stripText = text.replace(/{/g, '').replace(/}/g, '');\n    _InputBox.input.value = stripText;\n    (0, _python.updateHint)(stripText);\n    dispatch((0, _index.storeClassIndex)(id));\n  };\n};\n\nvar normalStyle = function normalStyle(lst) {\n  return _.map(lst, function (p) {\n    return { id: p.id, text: p.text, style: \"normal\" };\n  });\n};\n\nvar selectedStyle = function selectedStyle(lst) {\n  return _.map(lst, function (p) {\n    return { id: p.id, text: p.text, style: \"c0\" };\n  });\n};\n\nvar reorder = function reorder(currIndex, predictions) {\n  if (currIndex == null) {\n    return predictions;\n  } else {\n    return [].concat(_toConsumableArray(selectedStyle(_.filter(predictions, function (p) {\n      return p.id === currIndex;\n    }))), _toConsumableArray(normalStyle(_.filter(predictions, function (p) {\n      return p.id !== currIndex;\n    }))));\n  }\n};\n\n// TODO: should logic that binds to tab-key press be here as well?\n\n// defines component for prediction strip above main input text\nvar PredictionStrip = function PredictionStrip(_ref) {\n  var dispatch = _ref.dispatch,\n      predictions = _ref.predictions,\n      currIndex = _ref.currIndex;\n\n  // TODO: optimize width\n  var charLength = predictions.map(function (p) {\n    return p.text.length;\n  }).reduce(function (x, y) {\n    return x + y;\n  }, 0);\n  return _react2.default.createElement(\n    'div',\n    { className: 'prediction_strip' },\n    _react2.default.createElement(\n      'div',\n      { className: 'predictions', style: { width: charLength * 9 + \"px\" } },\n      reorder(currIndex, predictions).map(function (obj, i) {\n        return _react2.default.createElement(\n          'span',\n          { onClick: setInput(dispatch, obj.text, obj.id), className: \"prediction \" + obj.style },\n          obj.text\n        );\n      })\n    )\n  );\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    predictions: state.predictions,\n    currIndex: state.currentInput.classIndex // for selected prediction\n  };\n};\n\nexports.PredictionStrip = PredictionStrip = (0, _reactRedux.connect)(mapStateToProps)(PredictionStrip);\n\nexports.PredictionStrip = PredictionStrip;\nexports.setInput = setInput;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9QcmVkaWN0aW9uU3RyaXAuanM/ZDFhMiJdLCJuYW1lcyI6WyJfIiwic2V0SW5wdXQiLCJkaXNwYXRjaCIsInRleHQiLCJpZCIsInN0cmlwVGV4dCIsInJlcGxhY2UiLCJ2YWx1ZSIsIm5vcm1hbFN0eWxlIiwibHN0IiwibWFwIiwicCIsInN0eWxlIiwic2VsZWN0ZWRTdHlsZSIsInJlb3JkZXIiLCJjdXJySW5kZXgiLCJwcmVkaWN0aW9ucyIsImZpbHRlciIsIlByZWRpY3Rpb25TdHJpcCIsImNoYXJMZW5ndGgiLCJsZW5ndGgiLCJyZWR1Y2UiLCJ4IiwieSIsIndpZHRoIiwib2JqIiwiaSIsIm1hcFN0YXRlVG9Qcm9wcyIsInN0YXRlIiwiY3VycmVudElucHV0IiwiY2xhc3NJbmRleCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0lBQVlBLEM7Ozs7Ozs7O0FBRVo7QUFDQSxJQUFNQyxXQUFXLFNBQVhBLFFBQVcsQ0FBQ0MsUUFBRCxFQUFXQyxJQUFYLEVBQWlCQyxFQUFqQixFQUF3QjtBQUNyQyxTQUFPLFlBQU07QUFDVCxRQUFJQyxZQUFZRixLQUFLRyxPQUFMLENBQWEsSUFBYixFQUFtQixFQUFuQixFQUF1QkEsT0FBdkIsQ0FBK0IsSUFBL0IsRUFBcUMsRUFBckMsQ0FBaEI7QUFDQSxvQkFBTUMsS0FBTixHQUFjRixTQUFkO0FBQ0EsNEJBQVdBLFNBQVg7QUFDQUgsYUFBUyw0QkFBZ0JFLEVBQWhCLENBQVQ7QUFDSCxHQUxEO0FBTUgsQ0FQRDs7QUFTQSxJQUFNSSxjQUFjLFNBQWRBLFdBQWMsQ0FBQ0MsR0FBRCxFQUFTO0FBQzNCLFNBQU9ULEVBQUVVLEdBQUYsQ0FBTUQsR0FBTixFQUFXLFVBQUNFLENBQUQsRUFBTztBQUFFLFdBQU8sRUFBQ1AsSUFBR08sRUFBRVAsRUFBTixFQUFVRCxNQUFLUSxFQUFFUixJQUFqQixFQUF1QlMsT0FBTyxRQUE5QixFQUFQO0FBQWlELEdBQXJFLENBQVA7QUFDRCxDQUZEOztBQUlBLElBQU1DLGdCQUFnQixTQUFoQkEsYUFBZ0IsQ0FBQ0osR0FBRCxFQUFTO0FBQzdCLFNBQU9ULEVBQUVVLEdBQUYsQ0FBTUQsR0FBTixFQUFXLFVBQUNFLENBQUQsRUFBTztBQUFFLFdBQU8sRUFBQ1AsSUFBR08sRUFBRVAsRUFBTixFQUFVRCxNQUFLUSxFQUFFUixJQUFqQixFQUF1QlMsT0FBTyxJQUE5QixFQUFQO0FBQTZDLEdBQWpFLENBQVA7QUFDRCxDQUZEOztBQUlBLElBQU1FLFVBQVUsU0FBVkEsT0FBVSxDQUFDQyxTQUFELEVBQVlDLFdBQVosRUFBNEI7QUFDMUMsTUFBSUQsYUFBYSxJQUFqQixFQUFzQjtBQUNwQixXQUFPQyxXQUFQO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsd0NBQVlILGNBQWNiLEVBQUVpQixNQUFGLENBQVNELFdBQVQsRUFBc0IsVUFBQ0wsQ0FBRDtBQUFBLGFBQU9BLEVBQUVQLEVBQUYsS0FBU1csU0FBaEI7QUFBQSxLQUF0QixDQUFkLENBQVosc0JBQ1lQLFlBQVlSLEVBQUVpQixNQUFGLENBQVNELFdBQVQsRUFBc0IsVUFBQ0wsQ0FBRDtBQUFBLGFBQU9BLEVBQUVQLEVBQUYsS0FBU1csU0FBaEI7QUFBQSxLQUF0QixDQUFaLENBRFo7QUFFRDtBQUNGLENBUEQ7O0FBU0E7O0FBRUE7QUFDQSxJQUFJRyxrQkFBa0IsK0JBQXdDO0FBQUEsTUFBdENoQixRQUFzQyxRQUF0Q0EsUUFBc0M7QUFBQSxNQUE1QmMsV0FBNEIsUUFBNUJBLFdBQTRCO0FBQUEsTUFBZkQsU0FBZSxRQUFmQSxTQUFlOztBQUM1RDtBQUNBLE1BQU1JLGFBQWFILFlBQVlOLEdBQVosQ0FBZ0IsVUFBQ0MsQ0FBRDtBQUFBLFdBQU9BLEVBQUVSLElBQUYsQ0FBT2lCLE1BQWQ7QUFBQSxHQUFoQixFQUFzQ0MsTUFBdEMsQ0FBNkMsVUFBQ0MsQ0FBRCxFQUFHQyxDQUFIO0FBQUEsV0FBU0QsSUFBSUMsQ0FBYjtBQUFBLEdBQTdDLEVBQTZELENBQTdELENBQW5CO0FBQ0EsU0FBUTtBQUFBO0FBQUEsTUFBSyxXQUFVLGtCQUFmO0FBQ0Y7QUFBQTtBQUFBLFFBQUssV0FBVSxhQUFmLEVBQTZCLE9BQU8sRUFBQ0MsT0FBUUwsYUFBYSxDQUFkLEdBQW1CLElBQTNCLEVBQXBDO0FBQ0dMLGNBQVFDLFNBQVIsRUFBbUJDLFdBQW5CLEVBQWdDTixHQUFoQyxDQUFvQyxVQUFDZSxHQUFELEVBQUtDLENBQUw7QUFBQSxlQUFXO0FBQUE7QUFBQSxZQUFNLFNBQVN6QixTQUFTQyxRQUFULEVBQW1CdUIsSUFBSXRCLElBQXZCLEVBQTZCc0IsSUFBSXJCLEVBQWpDLENBQWYsRUFBcUQsV0FBVyxnQkFBZ0JxQixJQUFJYixLQUFwRjtBQUE2RmEsY0FBSXRCO0FBQWpHLFNBQVg7QUFBQSxPQUFwQztBQURIO0FBREUsR0FBUjtBQUtELENBUkQ7O0FBWUEsSUFBTXdCLGtCQUFrQixTQUFsQkEsZUFBa0IsQ0FBQ0MsS0FBRDtBQUFBLFNBQVk7QUFDaENaLGlCQUFhWSxNQUFNWixXQURhO0FBRWhDRCxlQUFXYSxNQUFNQyxZQUFOLENBQW1CQyxVQUZFLENBRVM7QUFGVCxHQUFaO0FBQUEsQ0FBeEI7O0FBS0EsUUFFUVosZUFGUixxQkFBa0IseUJBQVFTLGVBQVIsRUFBeUJULGVBQXpCLENBQWxCOztRQUVRQSxlLEdBQUFBLGU7UUFBaUJqQixRLEdBQUFBLFEiLCJmaWxlIjoiNTAxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGlucHV0IH0gZnJvbSAnLi4vY29udGFpbmVycy9JbnB1dEJveCc7XG5pbXBvcnQgeyB1cGRhdGVIaW50IH0gZnJvbSAnLi4vYXBpX2NhbGxzL3B5dGhvbi5qcyc7XG5pbXBvcnQgeyBzdG9yZUNsYXNzSW5kZXgsIGNsZWFyQ2xhc3NJbmRleCB9IGZyb20gJy4uL2FjdGlvbnMvaW5kZXguanMnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuLy8gc2V0IG1haW4gaW5wdXQgdGV4dCBhbmQgdXBkYXRlIGhpbnRcbmNvbnN0IHNldElucHV0ID0gKGRpc3BhdGNoLCB0ZXh0ICxpZCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIGxldCBzdHJpcFRleHQgPSB0ZXh0LnJlcGxhY2UoL3svZywgJycpLnJlcGxhY2UoL30vZywgJycpO1xuICAgICAgICBpbnB1dC52YWx1ZSA9IHN0cmlwVGV4dDtcbiAgICAgICAgdXBkYXRlSGludChzdHJpcFRleHQpO1xuICAgICAgICBkaXNwYXRjaChzdG9yZUNsYXNzSW5kZXgoaWQpKTtcbiAgICB9O1xufTtcblxuY29uc3Qgbm9ybWFsU3R5bGUgPSAobHN0KSA9PiB7XG4gIHJldHVybiBfLm1hcChsc3QsIChwKSA9PiB7IHJldHVybiB7aWQ6cC5pZCwgdGV4dDpwLnRleHQsIHN0eWxlOiBcIm5vcm1hbFwifTsgfSk7XG59O1xuXG5jb25zdCBzZWxlY3RlZFN0eWxlID0gKGxzdCkgPT4ge1xuICByZXR1cm4gXy5tYXAobHN0LCAocCkgPT4geyByZXR1cm4ge2lkOnAuaWQsIHRleHQ6cC50ZXh0LCBzdHlsZTogXCJjMFwifTsgfSk7XG59O1xuXG5jb25zdCByZW9yZGVyID0gKGN1cnJJbmRleCwgcHJlZGljdGlvbnMpID0+IHtcbiAgaWYgKGN1cnJJbmRleCA9PSBudWxsKXtcbiAgICByZXR1cm4gcHJlZGljdGlvbnM7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFsuLi4oc2VsZWN0ZWRTdHlsZShfLmZpbHRlcihwcmVkaWN0aW9ucywgKHApID0+IHAuaWQgPT09IGN1cnJJbmRleCkpKSxcbiAgICAgICAgICAgIC4uLihub3JtYWxTdHlsZShfLmZpbHRlcihwcmVkaWN0aW9ucywgKHApID0+IHAuaWQgIT09IGN1cnJJbmRleCkpKV1cbiAgfVxufTtcblxuLy8gVE9ETzogc2hvdWxkIGxvZ2ljIHRoYXQgYmluZHMgdG8gdGFiLWtleSBwcmVzcyBiZSBoZXJlIGFzIHdlbGw/XG5cbi8vIGRlZmluZXMgY29tcG9uZW50IGZvciBwcmVkaWN0aW9uIHN0cmlwIGFib3ZlIG1haW4gaW5wdXQgdGV4dFxubGV0IFByZWRpY3Rpb25TdHJpcCA9ICh7ZGlzcGF0Y2gsIHByZWRpY3Rpb25zLCBjdXJySW5kZXh9KSA9PiB7XG4gIC8vIFRPRE86IG9wdGltaXplIHdpZHRoXG4gIGNvbnN0IGNoYXJMZW5ndGggPSBwcmVkaWN0aW9ucy5tYXAoKHApID0+IHAudGV4dC5sZW5ndGgpLnJlZHVjZSgoeCx5KSA9PiB4ICsgeSwgMCk7XG4gIHJldHVybiAoPGRpdiBjbGFzc05hbWU9XCJwcmVkaWN0aW9uX3N0cmlwXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHJlZGljdGlvbnNcIiBzdHlsZT17e3dpZHRoOiAoY2hhckxlbmd0aCAqIDkpICsgXCJweFwifX0+XG4gICAgICAgICAge3Jlb3JkZXIoY3VyckluZGV4LCBwcmVkaWN0aW9ucykubWFwKChvYmosaSkgPT4gPHNwYW4gb25DbGljaz17c2V0SW5wdXQoZGlzcGF0Y2gsIG9iai50ZXh0LCBvYmouaWQpfSBjbGFzc05hbWU9e1wicHJlZGljdGlvbiBcIiArIG9iai5zdHlsZX0+eyBvYmoudGV4dCB9PC9zcGFuPil9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+KTtcbn07XG5cblxuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSAoc3RhdGUpID0+ICh7XG4gICAgcHJlZGljdGlvbnM6IHN0YXRlLnByZWRpY3Rpb25zLFxuICAgIGN1cnJJbmRleDogc3RhdGUuY3VycmVudElucHV0LmNsYXNzSW5kZXggLy8gZm9yIHNlbGVjdGVkIHByZWRpY3Rpb25cbn0pO1xuXG5QcmVkaWN0aW9uU3RyaXAgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcykoUHJlZGljdGlvblN0cmlwKTtcblxuZXhwb3J0IHtQcmVkaWN0aW9uU3RyaXAsIHNldElucHV0fTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2FwcC9jb21wb25lbnRzL1ByZWRpY3Rpb25TdHJpcC5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ })

})